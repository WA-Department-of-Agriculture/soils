[{"path":"https://wa-department-of-agriculture.github.io/soils/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Washington State Department Agriculture Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/docx.html","id":"example-reports","dir":"Articles","previous_headings":"","what":"Example Reports","title":"MS Word Reports","text":"examples show output without edits.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/docx.html","id":"section","dir":"Articles","previous_headings":"","what":"MS Word Reports","title":"MS Word Reports","text":"Manual Formatting Edits Without Edits See manually formatted report full screen new tab. See original rendered report full screen new tab.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/docx.html","id":"manual-formatting-edits-1","dir":"Articles","previous_headings":"","what":"Manual Formatting Edits","title":"MS Word Reports","text":"rendering .docx, reports opened MS Word manual formatting edits: Changed images float around text. Tables autofit going Layout > AutoFit > AutoFit Window. Adjust plot sizes page breaks measurement group’s table plot fit one page. manually adjusting image float around text first report, copied pasted static pages project background reports. reduced tedious point click formatting. added keyboard shortcut autofitting wide tables: MS Word > File > Options > Customize Ribbon. Open Customize Keyboard dialog box clicking Keboard shortcuts: Customize. select Categories: Table Tools | Layout Tab > Commands: AutoFitWindow > Press new shortcut key: Alt+Ctrl+Shift+> Assign. Click table use new shortcut autofit window. Word Options add new shortcut key autofitting tables fit window future, like create template using LaTex render .pdf reports better controls floating images around text fitting tables plots avoid intermediate .docx step. example reports rendered .docx files converted PDFs web publishing.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/project.html","id":"create-a-soil-health-report-project","dir":"Articles","previous_headings":"","what":"Create a Soil Health Report Project","title":"Create a New Template Project","text":"assume working RStudio Desktop. workflow tested IDEs Visual Studio Code. Install soils : two ways create RStudio project. Option 1. Open RStudio > File > New Project > \"Soil Health Quarto Report\" RStudio Project Wizard Soil Health Quarto Report selected Option 2. console, run: following print console: Output running soils::create_soils() RStudio console","code":"# install.packages(\"devtools\") devtools::install_github(\"WA-Department-of-Agriculture/soils\") soils::create_soils(path = \"path/to/project\")"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/project.html","id":"project-structure-overview","dir":"Articles","previous_headings":"","what":"Project Structure Overview","title":"Create a New Template Project","text":"options create launch new RStudio project : inst folder containing Quarto template, child documents, example data, images, style resources. R folder R scripts source code soils functions.","code":"├── inst │   ├── producer_report.qmd │   ├── _01_project_summary.qmd │   ├── _02_soil_health_background.qmd │   ├── _03_physical_measurements.qmd │   ├── _04_biological_measurements.qmd │   ├── _05_chemical_measurements.qmd │   ├── _06_looking_forward.qmd │   └── _07_acknowledgement.qmd │   ├── extdata │   │   ├── dataDictionary.csv │   │   ├── dfPlot.csv │   │   ├── dfTexture.csv │   │   ├── exampleData.csv │   │   ├── headers.RDS │   │   └── tables.RDS │   ├── images │   │   ├── biological.png │   │   ├── chemical.png │   │   ├── logo.png │   │   └── physical.png │   ├── resources │   │   ├── styles.css │   │   └── word-template.docx ├── R │   ├── data_wrangling.R │   ├── helpers.R │   ├── map.R │   ├── plots.R │   ├── render.R │   └── tables.R └── test.Rproj"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/project.html","id":"render-the-report-template","dir":"Articles","previous_headings":"","what":"Render the Report Template","title":"Create a New Template Project","text":"used RStudio IDE create project, main Quarto template producer_report.qmd automatically open new project session. Make sure everything set correctly rendering template report right package. used soils::create_soils(), need open inst folder access file Files pane. RStudio Files pane showing .qmd files resources inside project > inst folder producer_report.qmd open, click Render button top file generate either HTML MS Word report. can check Render Save option automatically update preview whenever re-render document. RStudio Quarto Render button dropdown HTML MS Word Render Save option checked Hopefully rendered report inst directory file name matching input .qmd name. learn customize reports suit project, head article Soil Health Reports.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/report.html","id":"quarto-and-markdown-basics","dir":"Articles","previous_headings":"","what":"Quarto and Markdown Basics","title":"Write Soil Health Reports","text":"’re new Quarto markdown, first check tutorials markdown basics guide.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/report.html","id":"file-paths","dir":"Articles","previous_headings":"","what":"File Paths","title":"Write Soil Health Reports","text":"File paths can tricky, especially working files use source files different folders. use ::() build file path relative directory .Rproj file located. strongly recommend using package avoid file path issues.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/report.html","id":"washi-theme","dir":"Articles","previous_headings":"","what":"washi Theme","title":"Write Soil Health Reports","text":"Default fonts colors within soils come Washington Soil Health Initiative (WaSHI) branding package washi. allows create beautiful plots, tables, reports box. can customize fonts colors match branding modifying soils functions, style sheets, report templates. install, import, register washi default fonts, follow instructions. Lato used headings Poppins body text.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/report.html","id":"project-structure","dir":"Articles","previous_headings":"","what":"Project Structure","title":"Write Soil Health Reports","text":"Let’s begin familiarizing project structure files edit add. Look bolded statements need edit add files. add edit files described later sections: 1) Import Data, 2) Write Edit, 3) Render Reports, 4) Final Edits Sendoff.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/report.html","id":"inst","dir":"Articles","previous_headings":"Project Structure","what":"inst","title":"Write Soil Health Reports","text":"folder contains Quarto report template files, images, style sheets, example data bundled soils package.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/report.html","id":"qmd-files","dir":"Articles","previous_headings":"Project Structure > inst","what":".qmd files","title":"Write Soil Health Reports","text":"top level, eight Quarto files. first main document, called producer_report.qmd, references child documents knitted input main document. child documents prefixed underscore named sequential order appear parent document. Edit documents suit project. Child documents allow us reuse content without copying pasting. Use project summary reports using {{< include >}} shortcode. ’s time update summary, edit one place.","code":"├── inst │   ├── producer_report.qmd │   ├── _01_project_summary.qmd │   ├── _02_soil_health_background.qmd │   ├── _03_physical_measurements.qmd │   ├── _04_biological_measurements.qmd │   ├── _05_chemical_measurements.qmd │   ├── _06_looking_forward.qmd │   └── _07_acknowledgement.qmd # Our Project Summary  {{< include _01_project_summary.qmd >}}  More content here..."},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/report.html","id":"extdata","dir":"Articles","previous_headings":"Project Structure > inst","what":"extdata","title":"Write Soil Health Reports","text":"example data live, data need go. Add data set data dictionary folder processing data_wrangling.R script. file names extdata must match script. files * contain wrangled data used function examples. demonstrate input data must look like soils visualization functions. need edit add data files.","code":"├── inst │   ├── extdata │   │   ├── dataDictionary.csv │   │   ├── dfPlot.csv* │   │   ├── dfTexture.csv* │   │   ├── exampleData.csv │   │   ├── headers.RDS* │   │   └── tables.RDS*"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/report.html","id":"images","dir":"Articles","previous_headings":"Project Structure > inst","what":"images","title":"Write Soil Health Reports","text":"folder contains images want include report. See info including images Quarto. Replace logo.png . Use following syntax include image report:","code":"├── inst │   ├── images │   │   ├── biological.png │   │   ├── chemical.png │   │   ├── logo.png │   │   └── physical.png ![](images/chemical.png){height=\"50px\"}"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/report.html","id":"resources","dir":"Articles","previous_headings":"Project Structure > inst","what":"resources","title":"Write Soil Health Reports","text":"Style sheets used customize appearance reports. styles.css .html output word-template.docx .docx output. Open files modify fonts colors match branding. Learn Cascading Style Sheets (CSS) MS Word Style Templates.","code":"├── inst │   ├── resources │   │   ├── styles.css │   │   └── word-template.docx"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/report.html","id":"r","dir":"Articles","previous_headings":"Project Structure","what":"R","title":"Write Soil Health Reports","text":"R folder holds data_wrangling.R script gets sourced producer_report.qmd. scripts contain soils source code visualization functions. data inputs functions require processing data_wrangling.R. Optionally, modify functions better suit data reporting needs. example, change font color default arguments washi branding package organization’s theme. producer_report.qmd uses built-soils functions, need source modified R scripts .qmd document. avoid confusion, also rename modified function R script .qmd document.","code":"└── R     ├── data_wrangling.R     ├── helpers.R     ├── map.R     ├── plots.R     ├── render.R     └── tables.R"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/report.html","id":"import-data","dir":"Articles","previous_headings":"","what":"1) Import Data","title":"Write Soil Health Reports","text":"soils includes example data set data dictionary use templates. files also automatically loaded call library(soils), also found inst/extdata folder. allow try visualization functions report rendering immediately installing soils machine.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/report.html","id":"project-data","dir":"Articles","previous_headings":"1) Import Data","what":"Project Data","title":"Write Soil Health Reports","text":"Glimpse example data structure: column names data, besides measurements, must exactly . column names differ, use Ctrl + Shift + F find replace hard-coded values throughout .qmd files .R scripts. measurement must column. measurement column names must match column_name data dictionary.","code":"library(soils) dplyr::glimpse(exampleData) #> Rows: 100 #> Columns: 51 #> $ year                  <int> 2023, 2022, 2022, 2022, 2023, 2022, 2023, 2022, … #> $ sampleId              <chr> \"23-WUY05-01\", \"22-RHM05-02\", \"22-ENR07-02\", \"22… #> $ farmName              <chr> \"Farm 150\", \"Farm 085\", \"Farm 058\", \"Farm 061\", … #> $ producerName          <chr> \"Shanna\", \"Warren\", \"Alecia\", \"Samantha\", \"Shann… #> $ producerId            <chr> \"WUY05\", \"RHM05\", \"ENR07\", \"ZTD04\", \"WUY05\", \"BK… #> $ fieldName             <chr> \"Field 01\", \"Field 02\", \"Field 02\", \"Field 03\", … #> $ fieldId               <int> 1, 2, 2, 3, 3, 2, 1, 2, 1, 1, 1, 1, 2, 8, 2, 1, … #> $ county                <chr> \"County 9\", \"County 18\", \"County 11\", \"County 13… #> $ crop                  <chr> \"Hay/Silage\", \"Green Manure\", \"Vegetable\", \"Herb… #> $ texture               <chr> \"Loamy Sand\", \"Sandy Loam\", \"Silt Loam\", \"Silt L… #> $ `24hrminC_mgC.kg.day` <dbl> NA, NA, NA, 0.14, NA, NA, NA, NA, NA, NA, NA, NA… #> $ bd_g.cm3              <dbl> 1.30, 0.88, 1.21, 1.37, 1.22, 1.14, 1.44, 1.24, … #> $ pmN_lbs.ac            <dbl> 67.13, 129.97, 122.17, 95.24, 111.35, 61.92, -77… #> $ ammN_mg.kg            <dbl> 1.6, 21.6, 8.1, 13.8, 3.9, 12.4, 2.4, 12.4, 2.3,… #> $ nitrateN_mg.kg        <dbl> 9.2, 6.1, 25.3, 16.9, 6.7, 4.3, 21.5, 7.4, 2.3, … #> $ pmN_mg.kg             <dbl> 19.0, 54.1, 37.0, 25.6, 33.6, 20.0, -19.9, 33.6,… #> $ poxC_mg.kg            <int> 496, 571, 419, 424, 547, 235, 501, 480, 965, 105… #> $ pH                    <dbl> 6.7, 5.9, 6.3, 6.8, 7.6, 5.5, 5.5, 5.9, 6.3, 6.0… #> $ EC_mmhos.cm           <dbl> 0.42, 0.05, 0.60, 2.18, 0.60, 0.81, 0.55, 0.34, … #> $ K_mg.kg               <int> 498, 198, 294, 229, 273, 372, 289, 355, 253, 733… #> $ Ca_mg.kg              <int> 1380, 780, 1760, 3380, 2820, 1480, 1140, 2080, 2… #> $ Mg_mg.kg              <dbl> 145.2, 96.8, 266.2, 738.1, 193.6, 229.9, 133.1, … #> $ Na_mg.kg              <dbl> 16.1, 20.7, 20.7, 80.5, 13.8, 16.1, 23.0, 16.1, … #> $ CEC_meq.100g          <dbl> 7.8, 10.5, 13.0, 14.4, 10.1, 12.4, 12.9, 14.8, 1… #> $ B_mg.kg               <dbl> 0.22, 0.09, 0.41, 0.72, 0.25, 0.18, 0.12, 0.21, … #> $ Cu_mg.kg              <dbl> 0.6, 0.4, 4.2, 1.1, 0.7, 1.0, 0.5, 1.4, 1.1, 0.5… #> $ Fe_mg.kg              <int> 26, 28, 141, 37, 15, 64, 44, 85, 129, 31, 86, 38… #> $ Mn_mg.kg              <dbl> 1.5, 2.7, 4.1, 11.5, 1.7, 9.0, 4.4, 17.1, 9.9, 1… #> $ S_mg.kg               <dbl> 4.29, 9.41, 26.73, 51.70, 3.29, 4.51, 9.13, 8.26… #> $ Zn_mg.kg              <dbl> 1.7, 0.8, 4.2, 2.4, 0.8, 0.5, 34.0, 0.9, 7.8, 0.… #> $ `totalC_%`            <dbl> 1.85, 2.88, 1.68, 1.40, 1.65, 1.55, 2.25, 2.37, … #> $ `totalN_%`            <dbl> 0.16, 0.18, 0.14, 0.12, 0.16, 0.13, 0.15, 0.17, … #> $ ace_g.protein.kg.soil <dbl> 6.74, 21.50, 10.90, 5.53, 4.20, 10.30, 7.73, 6.8… #> $ `sand_%`              <int> 44, 69, 11, 36, 64, 24, 80, 22, 62, 48, 80, 69, … #> $ `silt_%`              <int> 23, 21, 79, 51, 33, 62, 16, 57, 26, 45, 14, 27, … #> $ `clay_%`              <int> 3, 10, 10, 13, 3, 14, 4, 21, 12, 7, 6, 4, 10, 13… #> $ `96hrminC_mgC.kg.day` <dbl> 35.60, 30.00, 15.00, 67.50, 50.60, 25.50, 30.60,… #> $ olsenP_mg.kg          <int> 15, 37, 73, 30, 8, 33, 27, 29, 40, 16, 19, 11, 1… #> $ `wsa_%`               <dbl> 88.5, 92.6, 91.3, 94.3, 84.6, 86.6, 86.9, 82.5, … #> $ `OM_%`                <dbl> 4.5, 5.8, 2.4, 2.9, 6.7, 3.2, 27.0, 4.2, 7.9, 5.… #> $ `TOC_%`               <dbl> 1.85, 2.88, 1.68, 1.40, 1.53, 1.55, 2.25, 2.37, … #> $ Ca_cmolc.kg           <dbl> 6.9, 3.9, 8.8, 16.9, 14.1, 7.4, 5.7, 10.4, 13.4,… #> $ Mg_cmolc.kg           <dbl> 1.2, 0.8, 2.2, 6.1, 1.6, 1.9, 1.1, 1.9, 3.5, 0.9… #> $ Na_cmolc.kg           <dbl> 0.07, 0.09, 0.09, 0.35, 0.06, 0.07, 0.10, 0.07, … #> $ WHC_in.ft             <dbl> 1.01, 1.08, 2.77, 1.93, 1.28, 2.25, 0.84, 2.14, … #> $ `moisture_%`          <dbl> 17.53, 33.10, 27.97, 25.27, 17.65, 25.97, 14.06,… #> $ `inorganicC_%`        <dbl> NA, NA, NA, NA, 0.12, NA, NA, NA, NA, NA, NA, NA… #> $ `pmN_nitrateN _mg.kg` <dbl> 29.0, NA, NA, NA, 42.7, NA, 1.1, NA, 124.0, NA, … #> $ pmN_ammN_mg.kg        <dbl> 0.8, NA, NA, NA, 1.5, NA, 2.9, NA, 0.7, NA, 14.4… #> $ longitude             <int> -119, -123, -122, -120, -119, -117, -118, -117, … #> $ latitude              <int> 49, 47, 47, 46, 49, 47, 49, 47, 48, 48, 46, 47, …"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/report.html","id":"data-dictionary","dir":"Articles","previous_headings":"1) Import Data","what":"Data Dictionary","title":"Write Soil Health Reports","text":"data dictionary used group order measurements, well provide nicely formatted labels display tables plots. example data dictionary contains UTF-8 superscripts subscripts saved specific encoding. Data dictionary saved CSV UTF-8 (Comma delimited) (*.csv) MS Excel data dictionary must exact column names example: measurement_group determines measurements grouped. order column specifies order measurements appear measurement group’s tables plots. column_name join key joining project data. abbr unit measurements represented flextable tables. abbr_unit formatted HTML line breaks ggplot2 plots.","code":"dplyr::glimpse(dataDictionary) #> Rows: 32 #> Columns: 8 #> $ measurement_group       <chr> \"biological\", \"biological\", \"biological\", \"bio… #> $ measurement_group_label <chr> \"Biological\", \"Biological\", \"Biological\", \"Bio… #> $ column_name             <chr> \"OM_%\", \"96hrminC_mgC.kg.day\", \"poxC_mg.kg\", \"… #> $ measurement_full_name   <chr> \"Organic Matter\", \"Potentially Mineralizable C… #> $ order                   <int> 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5… #> $ abbr                    <chr> \"Organic Matter\", \"Min C\", \"POXC\", \"PMN\", \"ACE… #> $ unit                    <chr> \"%\", \"mg/kg/day\", \"ppm\", \"lbs/ac\", \"g/kg\", \"\",… #> $ abbr_unit               <chr> \"Organic Matter<br>(%)\", \"Min C<br>(mg/kg/day)…  dataDictionary |>   # Removing this very wide column to better show the other columns   dplyr::select(-measurement_full_name) |>   # Show just the top 3 measurements in each `measurement_group`   dplyr::slice_head(     n = 3,     by = measurement_group   ) #>    measurement_group         measurement_group_label         column_name order #> 1         biological                      Biological                OM_%     1 #> 2         biological                      Biological 96hrminC_mgC.kg.day     2 #> 3         biological                      Biological          poxC_mg.kg     3 #> 4           chemical                        Chemical                  pH     1 #> 5           chemical                        Chemical         EC_mmhos.cm     2 #> 6           chemical                        Chemical        CEC_meq.100g     3 #> 7              macro Plant Essential Macro Nutrients            totalN_%     1 #> 8              macro Plant Essential Macro Nutrients      nitrateN_mg.kg     2 #> 9              macro Plant Essential Macro Nutrients          ammN_mg.kg     3 #> 10             micro Plant Essential Micro Nutrients             B_mg.kg     1 #> 11             micro Plant Essential Micro Nutrients            Fe_mg.kg     2 #> 12             micro Plant Essential Micro Nutrients            Mn_mg.kg     3 #> 13          physical                        Physical             texture     1 #> 14          physical                        Physical              sand_%     1 #> 15          physical                        Physical              silt_%     2 #>              abbr      unit             abbr_unit #> 1  Organic Matter         % Organic Matter<br>(%) #> 2           Min C mg/kg/day  Min C<br>(mg/kg/day) #> 3            POXC       ppm         POXC<br>(ppm) #> 4              pH                              pH #> 5              EC  mmhos/cm      EC<br>(mmhos/cm) #> 6             CEC  cmolc/kg     CEC<br>(cmolc/kg) #> 7         Total N         %        Total N<br>(%) #> 8             NO₃       ppm          NO₃<br>(ppm) #> 9           NH₄-N       ppm        NH₄-N<br>(ppm) #> 10              B       ppm            B<br>(ppm) #> 11             Fe       ppm           Fe<br>(ppm) #> 12             Mn       ppm           Mn<br>(ppm) #> 13        Texture                         Texture #> 14           Sand         %           Sand<br>(%) #> 15           Silt         %           Silt<br>(%)"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/report.html","id":"data_wrangling-r","dir":"Articles","previous_headings":"1) Import Data","what":"data_wrangling.R","title":"Write Soil Health Reports","text":"project data data dictionary files inst/extdata folder, edit data_wrangling.R file names: may need switch function read.csv() files different format.","code":"# Load lab results data <- read.csv(   paste0(here::here(), \"/inst/extdata/YOUR-FILE-NAME.csv\"),   check.names = FALSE )  # Load data dictionary for pretty labels dictionary <- read.csv(   paste0(here::here(), \"/inst/extdata/YOUR-FILE-NAME.csv\"),   # This encoding part is important for R to correctly read the   # subscripts and superscripts.   encoding = \"UTF-8\" )"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/report.html","id":"write-and-edit","dir":"Articles","previous_headings":"","what":"2) Write and Edit","title":"Write Soil Health Reports","text":"Almost Quarto report template files, images, style sheets, example data bundled soils package edited project.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/report.html","id":"report-metadata-and-options","dir":"Articles","previous_headings":"2) Write and Edit","what":"Report Metadata and Options","title":"Write Soil Health Reports","text":"report metadata options controlled YAML setup chunk producer_report.qmd.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/report.html","id":"yaml","dir":"Articles","previous_headings":"2) Write and Edit > Report Metadata and Options","what":"YAML","title":"Write Soil Health Reports","text":"first place start YAML (Yet Another Markup Language). YAML header content sandwiched three dashes (---) top file. contains document metadata, parameters, customization options. fields need edit : title: title report. Optionally include logo . subtitle: Subtitle appears title. producerId year: Default parameter values can found data. Ignore YAML fields values like explore ways customizing reports. Learn available YAML fields HTML documents MS Word documents.","code":"--- title: \"![](images/logo.png) Results from the State of the Soils\" subtitle: \"Fall 2023\" params:   producerId: WUY05   year: 2023 ---"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/report.html","id":"setup-chunk","dir":"Articles","previous_headings":"2) Write and Edit > Report Metadata and Options","what":"Setup Chunk","title":"Write Soil Health Reports","text":"shouldn’t need modify chunk unless want load additional libraries analyses visualizations. Notice use ::() manage file paths. out_type used determining chunks evaluated, depending whether report rendered .html .docx. path generated figures stored referenced report. data_wrangling.R sourced current producerId year parameters .qmd environment. error parameters found data.","code":"library(extrafont) # Register Poppins and Lato fonts for use in R library(washi) # For flextable and ggplot styles library(soils)  # Get output file type out_type <- knitr::opts_knit$get(\"rmarkdown.pandoc.to\")  # Set path for saving figure output path <- here::here(\"inst/figure_output/\")  # Create figure output directory if needed if (!dir.exists(path)) {   dir.create(path) }  # Run data wrangling script for current producer and year producerId <- params$producerId year <- params$year source(here::here(\"R/data_wrangling.R\"))"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/report.html","id":"report-content","dir":"Articles","previous_headings":"2) Write and Edit","what":"Report Content","title":"Write Soil Health Reports","text":"producer_report.qmd section measurement_group value, defined dataDictionary.csv. values hard coded – project uses different groupings, edit remove instance .qmd files accordingly. measurement group various chunks generating static interactive tables plots, depending whether report rendering .docx .html. chunks specific execution options: Edit, add, remove child documents images suit project. included placeholder text make easier find project-specific information. Use Ctrl + Shift + F search files EDIT: [INSERT.","code":"```{r physical-plot-html} #| eval: !expr out_type == \"html\" make_plotly(groups$physical) ```"},{"path":[]},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/report.html","id":"style-sheets","dir":"Articles","previous_headings":"2) Write and Edit > Theme","what":"Style Sheets","title":"Write Soil Health Reports","text":"style sheets can found inst/resources directory edited customize report appearance match branding.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/report.html","id":"html","dir":"Articles","previous_headings":"2) Write and Edit > Theme > Style Sheets","what":"HTML","title":"Write Soil Health Reports","text":"styles.css controls appearance HTML reports.","code":"/* Edit these :root variables */ :root {     --primary-color: #023B2C;     --secondary-color: #335c67;     --link-color: #a60f2d;     --heading-font: \"Lato\"     --body-font: \"Poppins\" }"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/report.html","id":"ms-word","dir":"Articles","previous_headings":"2) Write and Edit > Theme > Style Sheets","what":"MS Word","title":"Write Soil Health Reports","text":"Open word-template.docx modify styles according Microsoft documentation. Learn CSS MS Word Style Templates.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/report.html","id":"r-functions","dir":"Articles","previous_headings":"2) Write and Edit > Theme","what":"R Functions","title":"Write Soil Health Reports","text":"Edit tables.R, plots.R, map.R washi default fonts colors organization’s. Modify functions better suit data reporting needs. need source modified R scripts producer_report.qmd document. avoid confusion, also rename modified function R script .qmd document. example, let’s modify make_texture_triangle() use different default fonts colors: Note Mac OS users: facetted plotly strip plots issues overlapping labels. default panel_spacing arguments make_plotly() optimized rendering reports Windows machine. plots don’t look right machine, try modifying panel_spacing arguments described function documentation.","code":"# In `plots.R`  # `soils` default arguments: make_texture_triangle <- function(   df,   primary_color = washi::washi_pal[[\"standard\"]][[\"red\"]],   secondary_color = washi::washi_pal[[\"standard\"]][[\"gray\"]],   other_color = washi::washi_pal[[\"standard\"]][[\"tan\"]],   font_family = \"Poppins\"     )   ... }  # Edit to: make_texture_triangle_custom <- function(   df,   primary_color = \"blue\",   secondary_color = \"green\",   other_color = \"gray\",   font_family = \"Arial\"     )   ... }      # In `producer_report.qmd`  # Add this to your setup chunk source(here::here(\"R/plots.R\"))  # Ctrl + F to find and replace all instances of `make_texture_triangle(...)` # to `make_texture_triangle_custom(...)`."},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/report.html","id":"render-your-reports","dir":"Articles","previous_headings":"","what":"3) Render Your Reports","title":"Write Soil Health Reports","text":"can render reports RStudio IDE programmatically render_report() function.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/report.html","id":"using-the-rstudio-ide","dir":"Articles","previous_headings":"3) Render Your Reports","what":"Using the RStudio IDE","title":"Write Soil Health Reports","text":"generate preview report default parameters, use Render button keyboard shortcut (Ctrl + Shift + K). fastest way render reports great iterating content style. can check Render Save option automatically update preview whenever re-render document. HTML reports preview side--side .qmd file, whereas MS Word documents open separately. RStudio Quarto Render button dropdown HTML MS Word Render Save option checked","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/report.html","id":"using-render_report","dir":"Articles","previous_headings":"3) Render Your Reports","what":"Using render_report()","title":"Write Soil Health Reports","text":"also can render report programmatically: year producer ID incorporated file name. can specify output directory want reports stored. ’re ready render reports producers project, use render_report() function purrr::walk(). iterate producer ID year render reports :","code":"# Get the first producer ID in 2023 first_producer <- exampleData |>   subset(year == 2023) |>   head(1)  # Render html to the `/inst/reports/` directory render_report(   first_producer$producerId,   year = 2023,   input = \"producer_report.qmd\",   output = \"html\",   output_dir = paste0(here::here(), \"/inst/reports/\") ) # Get all unique producer IDs in 2023 producers <- exampleData |>   subset(year == 2023) |>   dplyr::distinct(producerId)  # Render docx for these 2023 producers to the `/inst/reports/` directory purrr::walk(   producers$producerId,   \\(producerId) render_report(     producerId,     year = 2023,     input = \"producer_report.qmd\",     output = \"docx\",     output_dir = paste0(here::here(), \"/inst/reports/\")   ),   .progress = TRUE )"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/report.html","id":"final-edits-and-sendoff","dir":"Articles","previous_headings":"","what":"4) Final Edits and Sendoff","title":"Write Soil Health Reports","text":"MS Word reports reviewed final formatting sending. See article MS Word Reports manual edits . use Adobe Acrobat convert .pdf smaller, portable files send producers. future, like create template using LaTex render .pdf reports better controls floating images around text fitting tables plots avoid intermediate .docx step. See article HTML Reports additional notes .html reports report recipients access .","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jadey N Ryan. Maintainer, author. Molly McIlquham. Author. Kwabena Sarpong. Author. Leslie Michel. Author. Teal Potter. Author. Deirdre Griffin LaHue. Author. Dani L Gelardi. Author. Washington State Department Agriculture. Copyright holder, funder.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ryan JN, McIlquham M, Sarpong KA, Michel L, Potter T, Griffin LaHue D, Gelardi DL. 2023. Visualize Report Soil Health Survey Data {soils}. Washington Soil Health Initiative. https://github.com/WA-Department--Agriculture/soils","code":"@Article{,   title = {Visualize and Report Soil Health Survey Data with {soils}},   author = {Jadey N Ryan and Molly McIlquham and Kwabena A Sarpong and Leslie Michel and Teal Potter and Deirdre Griffin LaHue and Dani L Gelardi and Washington State Department of Agriculture},   journal = {Washington Soil Health Initiative},   year = {2023},   url = {https://github.com/WA-Department-of-Agriculture/soils}, }"},{"path":[]},{"path":"https://wa-department-of-agriculture.github.io/soils/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Visualize and Report Soil Health Data","text":"part Washington Soil Health Initiative, Washington State Department Agriculture Washington State University developed soils soil health data visualization reporting.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/index.html","id":"disclaimer","dir":"","previous_headings":"","what":"Disclaimer","title":"Visualize and Report Soil Health Data","text":"repository package work progress.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Visualize and Report Soil Health Data","text":"Install development version soils GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"WA-Department-of-Agriculture/soils\")  # Load all the example data sets and functions library(soils)"},{"path":"https://wa-department-of-agriculture.github.io/soils/index.html","id":"requirements","dir":"","previous_headings":"","what":"Requirements","title":"Visualize and Report Soil Health Data","text":"report template uses Quarto, next-generation version R Markdown. assume ’re working RStudio Desktop. workflow tested IDEs Visual Studio Code. version RStudio must least v2022.07 editing previewing Quarto documents. Though strongly recommended use latest release RStudio. render .docx files, must Microsoft Word installed.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/index.html","id":"creating-a-new-soils-project","dir":"","previous_headings":"","what":"Creating a New soils Project","title":"Visualize and Report Soil Health Data","text":"installing soils, can use RStudio IDE soils::create_soils() function create new RStudio project example data, Quarto files, style sheets, images, R scripts needed generate example soil health reports. Read article Create New Template Project learn goodies bundled within soils. view article within RStudio, run command vignette(\"project\", \"soils\").","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/index.html","id":"parameterized-soil-health-reports","dir":"","previous_headings":"","what":"Parameterized Soil Health Reports","title":"Visualize and Report Soil Health Data","text":"package can help generate custom static .docx reports interactive .html reports every producer land owner soil health survey project. Read article Write Soil Health Reports detailed walk project workflow adapting template project. view article within RStudio, run command vignette(\"report\", \"soils\"). Check example reports: MS Word vignette(\"docx\", \"soils\") HTML vignette(\"html\", \"soils\") First page example MS Word report Beginning example HTML report","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/index.html","id":"acknowledgement-and-citation","dir":"","previous_headings":"","what":"Acknowledgement and Citation","title":"Visualize and Report Soil Health Data","text":"acknowledgement citation automatically embedded report. Soil Health Report Template used generate report developed Washington State Department Agriculture Washington State University (WSU) part Washington Soil Health Initiative. Text figures adapted WSU Extension publication #FS378E Soil Health Washington Vineyards. cite {soils} publications, please use: Ryan JN, McIlquham M, Sarpong KA, Michel L, Potter T, Griffin LaHue D, Gelardi DL. 2023. Visualize Report Soil Health Survey Data {soils}. Washington Soil Health Initiative. https://washingtonsoilhealthinitiative.com/. BibTex entry:","code":"## @Article{, ##   title = {Visualize and Report Soil Health Survey Data with {soils}}, ##   author = {Jadey N Ryan and Molly McIlquham and Kwabena A Sarpong and Leslie Michel and Teal Potter and Deirdre Griffin LaHue and Dani L Gelardi and Washington State Department of Agriculture}, ##   journal = {Washington Soil Health Initiative}, ##   year = {2023}, ##   url = {https://washingtonsoilhealthinitiative.com/}, ## }"},{"path":"https://wa-department-of-agriculture.github.io/soils/index.html","id":"credits","dir":"","previous_headings":"","what":"Credits","title":"Visualize and Report Soil Health Data","text":"soils adapts existing R project templating resources packages: RStudio Project Templates ratlas quartotemplate golem","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/add_texture_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Add ggplot2::geom_point() points to texture triangle — add_texture_points","title":"Add ggplot2::geom_point() points to texture triangle — add_texture_points","text":"Add ggplot2::geom_point() points texture triangle","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/add_texture_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add ggplot2::geom_point() points to texture triangle — add_texture_points","text":"","code":"add_texture_points(df, sand, silt, clay, ...)"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/add_texture_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add ggplot2::geom_point() points to texture triangle — add_texture_points","text":"df Data frame containing columns sand, silt, clay. sand, silt, clay Column names df sand, silt, clay % values. ... arguments pass ggplot2::aes().","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/add_texture_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add ggplot2::geom_point() points to texture triangle — add_texture_points","text":"ggplot2 texture triangle points samples.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/add_texture_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add ggplot2::geom_point() points to texture triangle — add_texture_points","text":"","code":"# Create a texture triangle with points colored by texture make_texture_triangle(body_font = \"sans\") +   add_texture_points(     df = exampleData,     sand = `sand_%`,     silt = `silt_%`,     clay = `clay_%`,     color = texture   ) +   ggplot2::scale_color_viridis_d() #> Registered S3 methods overwritten by 'ggtern': #>   method           from    #>   grid.draw.ggplot ggplot2 #>   plot.ggplot      ggplot2 #>   print.ggplot     ggplot2    # Remember these are `ggplot2` functions and require `+` instead of #  pipes (`|>` or `%>%`) try({   make_texture_triangle(body_font = \"sans\") +     add_texture_points(       df = exampleData,       sand = `sand_%`,       silt = `silt_%`,       clay = `clay_%`,       color = texture     ) |>     ggplot2::scale_color_viridis_d() })"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/calculate_mode.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the mode of categorical variable — calculate_mode","title":"Calculate the mode of categorical variable — calculate_mode","text":"Calculate mode categorical variable","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/calculate_mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the mode of categorical variable — calculate_mode","text":"","code":"calculate_mode(x)"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/calculate_mode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the mode of categorical variable — calculate_mode","text":"x Character vector calculate mode .","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/calculate_mode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the mode of categorical variable — calculate_mode","text":"value occurred often.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/calculate_mode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the mode of categorical variable — calculate_mode","text":"","code":"calculate_mode(exampleData$crop) #> [1] \"Vegetable\""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/convert_ggiraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a ggplot2 plot to an interactive ggiraph. — convert_ggiraph","title":"Convert a ggplot2 plot to an interactive ggiraph. — convert_ggiraph","text":"Convert ggplot2 plot interactive ggiraph.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/convert_ggiraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a ggplot2 plot to an interactive ggiraph. — convert_ggiraph","text":"","code":"convert_ggiraph(plot, ..., body_font = \"Poppins\", width = 6, height = 4)"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/convert_ggiraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a ggplot2 plot to an interactive ggiraph. — convert_ggiraph","text":"plot ggplot2 plot convert interactive ggiraph. plot must contain ggiraph::geom_<plot_type>_interactive(). ... arguments pass ggiraph::girafe_options(). body_font Font family use throughout plot. Defaults \"Poppins\". width Width SVG output inches. Defaults 6. height Height SVG output inches. Defaults 4.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/convert_ggiraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a ggplot2 plot to an interactive ggiraph. — convert_ggiraph","text":"Facetted strip plots classes girafe htmlwidget.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/convert_ggiraph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a ggplot2 plot to an interactive ggiraph. — convert_ggiraph","text":"","code":"# Read in wrangled example plot data # See `data_wrangling.R` for processing steps df_plot_path <- soils_example(\"df_plot.RDS\") df_plot <- readRDS(df_plot_path)  # Make strip plot with all measurements and set scales based on # the category column and then apply theme.  # Subset df to just biological measurement group df_plot_bio <- df_plot |>   subset(measurement_group == \"biological\")  # NOTE: the plot gets piped into the `set_scales()` function, which gets # added to `theme_facet_strip()`. plot <- make_strip_plot(   df_plot_bio,   x = dummy,   y = value,   id = sampleId,   group = abbr_unit,   tooltip = label,   color = category,   size = category,   alpha = category,   shape = category ) |>   set_scales() +   theme_facet_strip(body_font = \"sans\")  # Convert static plot to interactive `ggiraph` convert_ggiraph(plot) #> Error in convert_ggiraph(plot): Can't find font family `Poppins` on your system. #> ℹ See the `ggiraph book` (<https://www.ardata.fr/ggiraph-book/fonts.html>) for #>   help."},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/create_soils.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a project directory for generating soil health reports — create_soils","title":"Create a project directory for generating soil health reports — create_soils","text":"Creates RStudio project containing Quarto template resources (images, style sheets, etc.) R scripts functions used Quarto template modification. See vignettes(\"project\", \"soils\") details.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/create_soils.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a project directory for generating soil health reports — create_soils","text":"","code":"create_soils(path, overwrite = FALSE, open = TRUE)"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/create_soils.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Create a project directory for generating soil health reports — create_soils","text":"Adapted golem::create_golem().","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/create_soils.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a project directory for generating soil health reports — create_soils","text":"path Name project directory created. overwrite Boolean. Overwrite existing project? open Boolean. Open newly created project?","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/create_soils.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a project directory for generating soil health reports — create_soils","text":"new project directory containing template resources.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/create_soils.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a project directory for generating soil health reports — create_soils","text":"","code":"if (FALSE) { # Create temporary directory dir <- tempdir()  # Create soils project create_soils(dir, overwrite = TRUE)  # Delete temporary directory unlink(dir, recursive = TRUE) }"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/dataDictionary.html","id":null,"dir":"Reference","previous_headings":"","what":"Data dictionary — dataDictionary","title":"Data dictionary — dataDictionary","text":"example data dictionary Washington Soil Health Initiative (WaSHI) State Soils Assessment anonymized data.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/dataDictionary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data dictionary — dataDictionary","text":"","code":"dataDictionary"},{"path":[]},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/dataDictionary.html","id":"datadictionary-a-data-frame-with-rows-and-columns-columns-","dir":"Reference","previous_headings":"","what":"dataDictionary A data frame with 32 rows and 7 columns. columns:","title":"Data dictionary — dataDictionary","text":"measurement_group Name group measurements measurement_group_label Label measurement group used heading column_name Name column data set, used joining measurement_full_name Measurement fully spelled order Order measurements presented within measurement_group abbr Abbreviated measurement name labels unit Measurement unit abbr_unit HTML formatted abbreviation unit plots tables","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/dataDictionary.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data dictionary — dataDictionary","text":"WaSHI State Soils","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/exampleData.html","id":null,"dir":"Reference","previous_headings":"","what":"Example data — exampleData","title":"Example data — exampleData","text":"subset Washington Soil Health Initiative (WaSHI) State Soils Assessment anonymized data. data set presents sample row, columns measurement.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/exampleData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example data — exampleData","text":"","code":"exampleData"},{"path":[]},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/exampleData.html","id":"exampledata-a-data-frame-with-rows-and-columns-","dir":"Reference","previous_headings":"","what":"exampleData A data frame with 100 rows and 51 columns:","title":"Example data — exampleData","text":"year Year sample sampleId, producerId, fieldId Anonymized IDs farmName, producerName, fieldName Anonymized names longitude, latitude Truncated coordinates texture Measured soil texture columns Column name includes measurement units; value measurement results","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/exampleData.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example data — exampleData","text":"WaSHI State Soils","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/format_ft_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional formatting of flextable background cell colors — format_ft_colors","title":"Conditional formatting of flextable background cell colors — format_ft_colors","text":"Color background cells based value compares project average. project average must last row table. footnote added table describing dark light colors mean.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/format_ft_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditional formatting of flextable background cell colors — format_ft_colors","text":"","code":"format_ft_colors(   ft,   lighter_color = washi::washi_pal[[\"standard\"]][[\"cream\"]],   darker_color = washi::washi_pal[[\"standard\"]][[\"tan\"]] )"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/format_ft_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditional formatting of flextable background cell colors — format_ft_colors","text":"ft Flextable object lighter_color Lighter background color. Defaults WaSHI cream. darker_color Darker background color. Defaults WaSHI tan.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/format_ft_colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conditional formatting of flextable background cell colors — format_ft_colors","text":"Field Average Organic Matter Min C POXC PMN ACE Protein Field 01 4.5 35.6 496 67.13 6.74 Field 03 6.7 50.6 547 111.35 4.20 County 9 Average (5 Fields) 4.7 50.0 490 79.00 5.30 Hay/Silage Average (14 Fields) 5.5 37.0 500 92.00 7.80 Pasture, Seeded Average (16 Fields) 5.5 58.0 520 140.00 7.30 Project Average (100 Fields) 5.8 50.0 530 99.00 8.50 Field Average Organic Matter Min C POXC PMN ACE Protein Field 01 4.5 35.6 496 67.13 6.74 Field 03 6.7 50.6 547 111.35 4.20 County 9 Average (5 Fields) 4.7 50.0 490 79.00 5.30 Hay/Silage Average (14 Fields) 5.5 37.0 500 92.00 7.80 Pasture, Seeded Average (16 Fields) 5.5 58.0 520 140.00 7.30 Project Average (100 Fields) 5.8 50.0 530 99.00 8.50 Values ≥ project average darker backgrounds. Values < project average lighter backgrounds.","code":"# Read in wrangled example table data # See `data_wrangling.R` for processing steps tables_path <- soils_example(\"tables.RDS\") tables <- readRDS(tables_path)  # Make the table ft <- flextable::flextable(tables$biological) ft .cl-6ecaf462{}.cl-6eb5c4e8{font-family:'DejaVu Sans';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-6ec479d4{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-6ec479e8{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-6ec49c02{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6ec49c16{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6ec49c17{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6ec49c20{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6ec49c21{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6ec49c2a{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}Field or AverageOrganic MatterMin CPOXCPMNACE ProteinField 014.535.649667.136.74Field 036.750.6547111.354.20County 9 Average (5 Fields)4.750.049079.005.30Hay/Silage Average (14 Fields)5.537.050092.007.80Pasture, Seeded Average (16 Fields)5.558.0520140.007.30Project Average (100 Fields)5.850.053099.008.50 # Conditionally format background cell colors format_ft_colors(ft) .cl-6ee5de80{}.cl-6edb4f1a{font-family:'DejaVu Sans';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-6edb4f2e{font-family:'DejaVu Sans';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:rgba(204, 194, 156, 1.00);}.cl-6edb4f2f{font-family:'DejaVu Sans';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:rgba(242, 240, 230, 1.00);}.cl-6ee00ab4{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-6ee00abe{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-6ee0272e{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6ee02738{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6ee02742{width:0.75in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6ee02743{width:0.75in;background-color:rgba(242, 240, 230, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6ee0274c{width:0.75in;background-color:rgba(204, 194, 156, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6ee0274d{width:0.75in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6ee0274e{width:0.75in;background-color:rgba(204, 194, 156, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6ee02756{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}Field or AverageOrganic MatterMin CPOXCPMNACE ProteinField 014.535.649667.136.74Field 036.750.6547111.354.20County 9 Average (5 Fields)4.750.049079.005.30Hay/Silage Average (14 Fields)5.537.050092.007.80Pasture, Seeded Average (16 Fields)5.558.0520140.007.30Project Average (100 Fields)5.850.053099.008.50Values ≥ project average have darker backgrounds. Values < project average have lighter backgrounds."},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/get_n_texture_by_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate n samples and most frequent texture by a grouping variable — get_n_texture_by_var","title":"Calculate n samples and most frequent texture by a grouping variable — get_n_texture_by_var","text":"function used summarize_by_var.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/get_n_texture_by_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate n samples and most frequent texture by a grouping variable — get_n_texture_by_var","text":"","code":"get_n_texture_by_var(results_long, producer_info, var)"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/get_n_texture_by_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate n samples and most frequent texture by a grouping variable — get_n_texture_by_var","text":"results_long Dataframe tidy, long format columns: sampleId, texture. producer_info Vector producer's values grouping variable. var Variable group summarize .","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/get_table_headers.html","id":null,"dir":"Reference","previous_headings":"","what":"Get table headers for flextable — get_table_headers","title":"Get table headers for flextable — get_table_headers","text":"function uses data dictionary create new dataframe abbreviations units measurement group flextable","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/get_table_headers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get table headers for flextable — get_table_headers","text":"","code":"get_table_headers(dictionary, group)"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/get_table_headers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get table headers for flextable — get_table_headers","text":"dictionary Dataframe containing columns measurement_group, abbr, unit. group Character measurement_group value.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_ft.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a flextable with column names from another dataframe — make_ft","title":"Make a flextable with column names from another dataframe — make_ft","text":"Make flextable column names another dataframe","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_ft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a flextable with column names from another dataframe — make_ft","text":"","code":"make_ft(table, header)"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_ft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a flextable with column names from another dataframe — make_ft","text":"table dataframe contents desired flextable output. header Another dataframe three columns: First column contains top header row. template, abbreviation measurement (.e. Organic Matter). Second column, called \"key\", contains join key. template, first column. Third column contains second header row. template, unit (.e. %).","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_ft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a flextable with column names from another dataframe — make_ft","text":"Formatted flextable object.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_ft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a flextable with column names from another dataframe — make_ft","text":"Field Average pH EC CEC Total C TOC Inorganic C  mmhos/cm cmolc/kg % Field 01 6.7 0.42 7.8 1.85 1.85  Field 03 7.6 0.60 10.1 1.65 1.53 0.12 County 9 Average (5 Fields) 7.1 0.48 8.7 1.70 1.60 0.11 Hay/Silage Average (14 Fields) 6.1 0.43 15.0 2.40 2.40  Pasture, Seeded Average (16 Fields) 6.2 0.33 14.0 2.70 2.70 0.11 Project Average (100 Fields) 6.1 0.74 15.0 2.90 2.90 0.19","code":"# Read in wrangled table data # See `data_wrangling.R` for processing steps headers_path <- soils_example(\"headers.RDS\") headers <- readRDS(headers_path)  tables_path <- soils_example(\"tables.RDS\") tables <- readRDS(tables_path)  # Input dataframes headers$chemical #> # A tibble: 7 × 3 #>   abbr             key              unit       #>   <chr>            <chr>            <chr>      #> 1 pH               pH               \"\"         #> 2 EC               EC               \"mmhos/cm\" #> 3 CEC              CEC              \"cmolc/kg\" #> 4 Total C          Total C          \"%\"        #> 5 TOC              TOC              \"%\"        #> 6 Inorganic C      Inorganic C      \"%\"        #> 7 Field or Average Field or Average \"\"          tables$chemical #> # A tibble: 6 × 7 #>   `Field or Average`                pH    EC   CEC `Total C`   TOC `Inorganic C` #>   <chr>                          <dbl> <dbl> <dbl>     <dbl> <dbl>         <dbl> #> 1 \"Field 01\"                       6.7  0.42   7.8      1.85  1.85         NA    #> 2 \"Field 03\"                       7.6  0.6   10.1      1.65  1.53          0.12 #> 3 \"County 9 Average \\n(5 Fields…   7.1  0.48   8.7      1.7   1.6           0.11 #> 4 \"Hay/Silage Average \\n(14 Fie…   6.1  0.43  15        2.4   2.4         NaN    #> 5 \"Pasture, Seeded Average \\n(1…   6.2  0.33  14        2.7   2.7           0.11 #> 6 \"Project Average \\n(100 Field…   6.1  0.74  15        2.9   2.9           0.19  # Make the flextable make_ft(   table = tables$chemical,   header = headers$chemical ) |> # Style the flextable style_ft() |> # Add the white line under the columns with the same units unit_hline(header = headers$chemical) .cl-6fc2ae1e{}.cl-6fb73764{font-family:'Lato';font-size:11pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(255, 255, 255, 1.00);background-color:transparent;}.cl-6fb73778{font-family:'Poppins';font-size:10pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-6fb73782{font-family:'Poppins';font-size:10pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-6fbcc8c8{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1.3;background-color:transparent;}.cl-6fbcc8d2{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1.3;background-color:transparent;}.cl-6fbcc8dc{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1.3;background-color:transparent;}.cl-6fbce574{width:0.75in;background-color:rgba(2, 59, 44, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6fbce588{width:0.75in;background-color:rgba(2, 59, 44, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(255, 255, 255, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6fbce589{width:0.75in;background-color:rgba(2, 59, 44, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(255, 255, 255, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6fbce592{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(62, 61, 61, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6fbce593{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(62, 61, 61, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6fbce594{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(62, 61, 61, 1.00);border-top: 1pt solid rgba(62, 61, 61, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-6fbce59c{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(62, 61, 61, 1.00);border-top: 1pt solid rgba(62, 61, 61, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}Field or AveragepHECCECTotal CTOCInorganic Cmmhos/cmcmolc/kg%Field 016.70.427.81.851.85Field 037.60.6010.11.651.530.12County 9 Average (5 Fields)7.10.488.71.701.600.11Hay/Silage Average (14 Fields)6.10.4315.02.402.40Pasture, Seeded Average (16 Fields)6.20.3314.02.702.700.11Project Average (100 Fields)6.10.7415.02.902.900.19"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_leaflet.html","id":null,"dir":"Reference","previous_headings":"","what":"Make leaflet map — make_leaflet","title":"Make leaflet map — make_leaflet","text":"Make leaflet map","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_leaflet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make leaflet map — make_leaflet","text":"","code":"make_leaflet(df, primary_color = washi::washi_pal[[\"standard\"]][[\"red\"]])"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_leaflet.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Make leaflet map — make_leaflet","text":"JavaScript code adapted leaflet.extras.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_leaflet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make leaflet map — make_leaflet","text":"df Dataframe containing columns: longitude, latitude, label, popup. See prep_for_leaflet() details. primary_color Color points. Defaults WaSHI red.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_leaflet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make leaflet map — make_leaflet","text":"Leaflet map.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_leaflet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make leaflet map — make_leaflet","text":"","code":"gis_df <- exampleData |>   dplyr::distinct(latitude, longitude, .keep_all = TRUE) |>   head(3) |>   prep_for_map(label_heading = fieldName, label_body = crop)  dplyr::glimpse(gis_df) #> Rows: 3 #> Columns: 53 #> $ year                  <dbl> 2023, 2022, 2022 #> $ sampleId              <chr> \"23-WUY05-01\", \"22-RHM05-02\", \"22-ENR07-02\" #> $ farmName              <chr> \"Farm 150\", \"Farm 085\", \"Farm 058\" #> $ producerName          <chr> \"Shanna\", \"Warren\", \"Alecia\" #> $ producerId            <chr> \"WUY05\", \"RHM05\", \"ENR07\" #> $ fieldName             <chr> \"Field 01\", \"Field 02\", \"Field 02\" #> $ fieldId               <dbl> 1, 2, 2 #> $ county                <chr> \"County 9\", \"County 18\", \"County 11\" #> $ crop                  <chr> \"Hay/Silage\", \"Green Manure\", \"Vegetable\" #> $ texture               <chr> \"Loamy Sand\", \"Sandy Loam\", \"Silt Loam\" #> $ `24hrminC_mgC.kg.day` <dbl> NA, NA, NA #> $ bd_g.cm3              <dbl> 1.30, 0.88, 1.21 #> $ pmN_lbs.ac            <dbl> 67.13, 129.97, 122.17 #> $ ammN_mg.kg            <dbl> 1.6, 21.6, 8.1 #> $ nitrateN_mg.kg        <dbl> 9.2, 6.1, 25.3 #> $ pmN_mg.kg             <dbl> 19.0, 54.1, 37.0 #> $ poxC_mg.kg            <dbl> 496, 571, 419 #> $ pH                    <dbl> 6.7, 5.9, 6.3 #> $ EC_mmhos.cm           <dbl> 0.42, 0.05, 0.60 #> $ K_mg.kg               <dbl> 498, 198, 294 #> $ Ca_mg.kg              <dbl> 1380, 780, 1760 #> $ Mg_mg.kg              <dbl> 145.2, 96.8, 266.2 #> $ Na_mg.kg              <dbl> 16.1, 20.7, 20.7 #> $ CEC_meq.100g          <dbl> 7.8, 10.5, 13.0 #> $ B_mg.kg               <dbl> 0.22, 0.09, 0.41 #> $ Cu_mg.kg              <dbl> 0.6, 0.4, 4.2 #> $ Fe_mg.kg              <dbl> 26, 28, 141 #> $ Mn_mg.kg              <dbl> 1.5, 2.7, 4.1 #> $ S_mg.kg               <dbl> 4.29, 9.41, 26.73 #> $ Zn_mg.kg              <dbl> 1.7, 0.8, 4.2 #> $ `totalC_%`            <dbl> 1.85, 2.88, 1.68 #> $ `totalN_%`            <dbl> 0.16, 0.18, 0.14 #> $ ace_g.protein.kg.soil <dbl> 6.74, 21.50, 10.90 #> $ `sand_%`              <dbl> 44, 69, 11 #> $ `silt_%`              <dbl> 23, 21, 79 #> $ `clay_%`              <dbl> 3, 10, 10 #> $ `96hrminC_mgC.kg.day` <dbl> 35.6, 30.0, 15.0 #> $ olsenP_mg.kg          <dbl> 15, 37, 73 #> $ `wsa_%`               <dbl> 88.5, 92.6, 91.3 #> $ `OM_%`                <dbl> 4.5, 5.8, 2.4 #> $ `TOC_%`               <dbl> 1.85, 2.88, 1.68 #> $ Ca_cmolc.kg           <dbl> 6.9, 3.9, 8.8 #> $ Mg_cmolc.kg           <dbl> 1.2, 0.8, 2.2 #> $ Na_cmolc.kg           <dbl> 0.07, 0.09, 0.09 #> $ WHC_in.ft             <dbl> 1.01, 1.08, 2.77 #> $ `moisture_%`          <dbl> 17.53, 33.10, 27.97 #> $ `inorganicC_%`        <dbl> NA, NA, NA #> $ `pmN_nitrateN _mg.kg` <dbl> 29, NA, NA #> $ pmN_ammN_mg.kg        <dbl> 0.8, NA, NA #> $ longitude             <dbl> -119, -123, -122 #> $ latitude              <dbl> 49, 47, 47 #> $ label                 <chr> \"<strong>Field 01<\/strong>\", \"<strong>Field 02<\/… #> $ popup                 <chr> \"<strong>Field 01<\/strong><br>Hay/Silage\", \"<str…  # Make leaflet make_leaflet(gis_df)  {\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}}},\"calls\":[{\"method\":\"addTiles\",\"args\":[\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\",null,\"Satellite\",{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false}]},{\"method\":\"addTiles\",\"args\":[\"https://server.arcgisonline.com/ArcGIS/rest/services//World_Topo_Map/MapServer/tile/{z}/{y}/{x}\",null,\"Topographic\",{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false}]},{\"method\":\"addCircleMarkers\",\"args\":[[49,47,47],[-119,-123,-122],10,null,null,{\"interactive\":true,\"draggable\":false,\"keyboard\":true,\"title\":\"\",\"alt\":\"\",\"zIndexOffset\":0,\"opacity\":1,\"riseOnHover\":true,\"riseOffset\":250,\"stroke\":false,\"color\":\"#a60f2d\",\"weight\":5,\"opacity.1\":0.5,\"fill\":true,\"fillColor\":\"#a60f2d\",\"fillOpacity\":0.7},null,null,[\"<strong>Field 01<\\/strong><br>Hay/Silage\",\"<strong>Field 02<\\/strong><br>Green Manure\",\"<strong>Field 02<\\/strong><br>Vegetable\"],{\"maxWidth\":300,\"minWidth\":50,\"autoPan\":true,\"keepInView\":false,\"closeButton\":true,\"closeOnClick\":true,\"className\":\"\"},[\"<strong>Field 01<\\/strong>\",\"<strong>Field 02<\\/strong>\",\"<strong>Field 02<\\/strong>\"],{\"interactive\":false,\"permanent\":true,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"style\":{\"font-size\":\"15px\"},\"className\":\"\",\"sticky\":true},null]},{\"method\":\"addLayersControl\",\"args\":[[\"Satellite\",\"Topographic\"],[],{\"collapsed\":false,\"autoZIndex\":true,\"position\":\"topright\"}]},{\"method\":\"addEasyButton\",\"args\":[{\"icon\":\"ion-arrow-shrink\",\"title\":\"Reset view\",\"onClick\":\"function(btn, map){ map.setView(map._initialCenter, map._initialZoom); }\",\"position\":\"topleft\"}]}],\"limits\":{\"lat\":[47,49],\"lng\":[-123,-119]}},\"evals\":[\"calls.4.args.0.onClick\"],\"jsHooks\":{\"render\":[{\"code\":\"function(el, x, data) {\\n  return (\\nfunction(el, x){\\n  var map = this;\\n  map.whenReady(function(){\\n    map._initialCenter = map.getCenter();\\n    map._initialZoom = map.getZoom();\\n  });\\n}).call(this.getMap(), el, x, data);\\n}\",\"data\":null}]}}"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_strip_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a facetted strip plot — make_strip_plot","title":"Make a facetted strip plot — make_strip_plot","text":"Make facetted strip plot","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_strip_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a facetted strip plot — make_strip_plot","text":"","code":"make_strip_plot(   df,   ...,   x = dummy,   y = value,   id = sampleId,   group = abbr_unit,   tooltip = label )"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_strip_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a facetted strip plot — make_strip_plot","text":"df Data frame plot. ... arguments pass ggplot2::aes(). x Column x-axis. strip plots, recommend using dummy variable act placeholder. Defaults column named dummy one value (\"dummy\") rows. y Column y-axis. Defaults value. id Column unique identifiers sample use data_id interactive plots. Defaults sampleId. group Column facet . Defaults abbr_unit. tooltip Column tooltip labels interactive plots.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_strip_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a facetted strip plot — make_strip_plot","text":"Facetted ggplot2 strip plots.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_strip_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a facetted strip plot — make_strip_plot","text":"","code":"# Read in wrangled example plot data # See `data_wrangling.R` for processing steps df_plot_path <- soils_example(\"df_plot.RDS\") df_plot <- readRDS(df_plot_path)  # Subset df to just biological measurement group df_plot_bio <- df_plot |>   subset(measurement_group == \"biological\")  # Make strip plot with all measurements and set scales based on # the category column and then apply theme.  # NOTE: the plot gets piped into the `set_scales()` function, which gets # added to `theme_facet_strip()`.  make_strip_plot(   df_plot_bio,   x = dummy,   y = value,   id = sampleId,   group = abbr_unit,   tooltip = label,   color = category,   size = category,   alpha = category,   shape = category ) |>   set_scales() +   theme_facet_strip(body_font = \"sans\")   # Example of strip plot without scales or theme functions make_strip_plot(df_plot_bio)   # Example of strip plot with `x` set to the facet group instead of a # dummy variable. make_strip_plot(df_plot_bio, x = abbr_unit) |>   set_scales() +   theme_facet_strip(body_font = \"sans\")"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_texture_triangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a texture triangle — make_texture_triangle","title":"Make a texture triangle — make_texture_triangle","text":"Make texture triangle","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_texture_triangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a texture triangle — make_texture_triangle","text":"","code":"make_texture_triangle(body_font = \"Poppins\")"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_texture_triangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a texture triangle — make_texture_triangle","text":"body_font Font family use throughout plot. Defaults \"Poppins\".","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_texture_triangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a texture triangle — make_texture_triangle","text":"Blank ggplot2 texture triangle USDA textural classes.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_texture_triangle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a texture triangle — make_texture_triangle","text":"","code":"# Blank texture triangle with just USDA classes make_texture_triangle(body_font = \"sans\")"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/prep_for_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Prep data to gis df — prep_for_map","title":"Prep data to gis df — prep_for_map","text":"Prep data gis df","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/prep_for_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prep data to gis df — prep_for_map","text":"","code":"prep_for_map(df, label_heading, label_body)"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/prep_for_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prep data to gis df — prep_for_map","text":"df Dataframe containing columns: longitude, latitude, two columns values want appear map label popup. label_heading Column df want appear bold point label map, well first line popup user clicks point. label_body Column df want appear body text label_heading popup.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/prep_for_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prep data to gis df — prep_for_map","text":"Dataframe input make_leaflet().","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/prep_for_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prep data to gis df — prep_for_map","text":"","code":"exampleData |>   dplyr::distinct(latitude, longitude, .keep_all = TRUE) |>   head(3) |>   prep_for_map(label_heading = fieldName, label_body = crop) #>   year    sampleId farmName producerName producerId fieldName fieldId    county #> 1 2023 23-WUY05-01 Farm 150       Shanna      WUY05  Field 01       1  County 9 #> 2 2022 22-RHM05-02 Farm 085       Warren      RHM05  Field 02       2 County 18 #> 3 2022 22-ENR07-02 Farm 058       Alecia      ENR07  Field 02       2 County 11 #>           crop    texture 24hrminC_mgC.kg.day bd_g.cm3 pmN_lbs.ac ammN_mg.kg #> 1   Hay/Silage Loamy Sand                  NA     1.30      67.13        1.6 #> 2 Green Manure Sandy Loam                  NA     0.88     129.97       21.6 #> 3    Vegetable  Silt Loam                  NA     1.21     122.17        8.1 #>   nitrateN_mg.kg pmN_mg.kg poxC_mg.kg  pH EC_mmhos.cm K_mg.kg Ca_mg.kg Mg_mg.kg #> 1            9.2      19.0        496 6.7        0.42     498     1380    145.2 #> 2            6.1      54.1        571 5.9        0.05     198      780     96.8 #> 3           25.3      37.0        419 6.3        0.60     294     1760    266.2 #>   Na_mg.kg CEC_meq.100g B_mg.kg Cu_mg.kg Fe_mg.kg Mn_mg.kg S_mg.kg Zn_mg.kg #> 1     16.1          7.8    0.22      0.6       26      1.5    4.29      1.7 #> 2     20.7         10.5    0.09      0.4       28      2.7    9.41      0.8 #> 3     20.7         13.0    0.41      4.2      141      4.1   26.73      4.2 #>   totalC_% totalN_% ace_g.protein.kg.soil sand_% silt_% clay_% #> 1     1.85     0.16                  6.74     44     23      3 #> 2     2.88     0.18                 21.50     69     21     10 #> 3     1.68     0.14                 10.90     11     79     10 #>   96hrminC_mgC.kg.day olsenP_mg.kg wsa_% OM_% TOC_% Ca_cmolc.kg Mg_cmolc.kg #> 1                35.6           15  88.5  4.5  1.85         6.9         1.2 #> 2                30.0           37  92.6  5.8  2.88         3.9         0.8 #> 3                15.0           73  91.3  2.4  1.68         8.8         2.2 #>   Na_cmolc.kg WHC_in.ft moisture_% inorganicC_% pmN_nitrateN _mg.kg #> 1        0.07      1.01      17.53           NA                  29 #> 2        0.09      1.08      33.10           NA                  NA #> 3        0.09      2.77      27.97           NA                  NA #>   pmN_ammN_mg.kg longitude latitude                     label #> 1            0.8      -119       49 <strong>Field 01<\/strong> #> 2             NA      -123       47 <strong>Field 02<\/strong> #> 3             NA      -122       47 <strong>Field 02<\/strong> #>                                       popup #> 1   <strong>Field 01<\/strong><br>Hay/Silage #> 2 <strong>Field 02<\/strong><br>Green Manure #> 3    <strong>Field 02<\/strong><br>Vegetable"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/pull_unique.html","id":null,"dir":"Reference","previous_headings":"","what":"Pull unique values from one column of dataframe — pull_unique","title":"Pull unique values from one column of dataframe — pull_unique","text":"Pull unique values one column dataframe","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/pull_unique.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pull unique values from one column of dataframe — pull_unique","text":"","code":"pull_unique(df, target)"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/pull_unique.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pull unique values from one column of dataframe — pull_unique","text":"df Dataframe column extract unique values . target Variable pull unique vector (.e. crop county).","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/pull_unique.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pull unique values from one column of dataframe — pull_unique","text":"Vector unique values target column.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/pull_unique.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pull unique values from one column of dataframe — pull_unique","text":"","code":"exampleData |>   pull_unique(crop) #>  [1] \"Hay/Silage\"       \"Green Manure\"     \"Vegetable\"        \"Herb\"             #>  [5] \"Pasture, Seeded\"  \"Cereal Grain\"     \"Native Land\"      \"Forest\"           #>  [9] \"Commercial Tree\"  \"Berry\"            \"Orchard\"          \"Fallow\"           #> [13] \"CRP/Conservation\" \"Seed\"             \"Oilseed\""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/render_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Render reports — render_report","title":"Render reports — render_report","text":"Wrapper quarto::quarto_render() additional project specific arguments. Limits output formats .html .docx. word document outputs opened manually edited ensure report looks good. See vignette(\"docx\", package = \"soils\") details edits","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/render_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render reports — render_report","text":"","code":"render_report(producerId, year, input, output = \"html\", output_dir = NULL)"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/render_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render reports — render_report","text":"producerId Character producerId render report . year Year samples include report. input Input .qmd file name. Must within inst folder. output Target output format. Currently supported options: \"html\" interactive report. \"docx\" editable word document. output_dir Path directory holds reports. NULL, reports saved project directory.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/render_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Render reports — render_report","text":"","code":"if (FALSE) { # Render single html report for first producer in data set first_producer <- head(exampleData$producerId, 1) render_report(   first_producer,   year = 2023,   input = \"producer_report.qmd\",   output = \"html\",   output_dir = paste0(here::here(), \"/inst/reports/\") )  producers <- exampleData |>   subset(year == 2023) |>   dplyr::distinct(producerId)  # Render docx for these 2023 producers to the `/inst/reports/` directory purrr::walk(   producers$producerId,   \\(producerId) render_report(     producerId,     year = 2023,     input = \"producer_report.qmd\",     output = \"docx\",     output_dir = paste0(here::here(), \"/inst/reports/\")   ),   .progress = TRUE ) }"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/set_scales.html","id":null,"dir":"Reference","previous_headings":"","what":"Define styles for producer's samples versus all samples — set_scales","title":"Define styles for producer's samples versus all samples — set_scales","text":"Define styles producer's samples versus samples","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/set_scales.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define styles for producer's samples versus all samples — set_scales","text":"","code":"set_scales(   plot,   primary_color = washi::washi_pal[[\"standard\"]][[\"red\"]],   secondary_color = washi::washi_pal[[\"standard\"]][[\"ltgray\"]],   other_color = washi::washi_pal[[\"standard\"]][[\"tan\"]] )"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/set_scales.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define styles for producer's samples versus all samples — set_scales","text":"plot ggplot object apply scales . primary_color Color producer's sample points. Defaults WaSHI green. secondary_color Color sample points \"crop\" \"county\" values category column. Defaults WaSHI gray. other_color Color sample points \"fields\" value category column. Defaults WaSHI tan.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/set_scales.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define styles for producer's samples versus all samples — set_scales","text":"ggplot object manual alpha, color, shape, size scales applied.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/set_scales.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define styles for producer's samples versus all samples — set_scales","text":"","code":"# Read in wrangled example plot data # See `data_wrangling.R` for processing steps df_plot_path <- soils_example(\"df_plot.RDS\") df_plot <- readRDS(df_plot_path) # Subset df to just biological measurement group df_plot_bio <- df_plot |>   subset(measurement_group == \"biological\")  # Make strip plot  make_strip_plot(   df_plot_bio,   x = dummy,   y = value,   id = sampleId,   group = abbr_unit,   tooltip = label,   color = category,   size = category,   alpha = category,   shape = category ) |>   set_scales() +   theme_facet_strip(body_font = \"sans\")   # Example without setting scales make_strip_plot(   df_plot_bio,   x = dummy,   y = value,   id = sampleId,   group = abbr_unit,   tooltip = label ) +   theme_facet_strip(body_font = \"sans\")"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/soils_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Get path to example data — soils_example","title":"Get path to example data — soils_example","text":"soils comes bundled example files inst/extdata directory. function make easy access.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/soils_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get path to example data — soils_example","text":"","code":"soils_example(file = NULL)"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/soils_example.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Get path to example data — soils_example","text":"Adapted readxl::readxl_example().","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/soils_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get path to example data — soils_example","text":"file Name file. NULL, example files listed.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/soils_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get path to example data — soils_example","text":"","code":"soils_example() #> [1] \"dataDictionary.csv\" \"df_plot.RDS\"        \"exampleData.csv\"    #> [4] \"headers.RDS\"        \"tables.RDS\"          soils_example(\"dfPlot.csv\") #> [1] \"\""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/style_ft.html","id":null,"dir":"Reference","previous_headings":"","what":"Style a flextable — style_ft","title":"Style a flextable — style_ft","text":"Style flextable","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/style_ft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Style a flextable — style_ft","text":"","code":"style_ft(   ft,   header_font = \"Lato\",   body_font = \"Poppins\",   header_color = washi::washi_pal[[\"standard\"]][[\"green\"]],   header_text_color = \"white\",   border_color = washi::washi_pal[[\"standard\"]][[\"gray\"]] )"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/style_ft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Style a flextable — style_ft","text":"ft Flextable object. header_font Font header text. Defaults \"Lato\". body_font Font body text. Defaults \"Poppins\". header_color Background color header cells. Defaults WaSHI green. header_text_color Color header text. Defaults white. border_color Color border lines. Defaults WaSHI gray.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/style_ft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Style a flextable — style_ft","text":"Styled flextable object.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/style_ft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Style a flextable — style_ft","text":"Field Average Organic Matter Min C POXC PMN ACE Protein Field 01 4.5 35.6 496 67.13 6.74 Field 03 6.7 50.6 547 111.35 4.20 County 9 Average (5 Fields) 4.7 50.0 490 79.00 5.30 Hay/Silage Average (14 Fields) 5.5 37.0 500 92.00 7.80 Pasture, Seeded Average (16 Fields) 5.5 58.0 520 140.00 7.30 Project Average (100 Fields) 5.8 50.0 530 99.00 8.50 Field Average Organic Matter Min C POXC PMN ACE Protein Field 01 4.5 35.6 496 67.13 6.74 Field 03 6.7 50.6 547 111.35 4.20 County 9 Average (5 Fields) 4.7 50.0 490 79.00 5.30 Hay/Silage Average (14 Fields) 5.5 37.0 500 92.00 7.80 Pasture, Seeded Average (16 Fields) 5.5 58.0 520 140.00 7.30 Project Average (100 Fields) 5.8 50.0 530 99.00 8.50","code":"# Read in wrangled example table data # See `data_wrangling.R` for processing steps tables_path <- soils_example(\"tables.RDS\") tables <- readRDS(tables_path)  # Make the table ft <- flextable::flextable(tables$biological) ft .cl-7630eaea{}.cl-7626042c{font-family:'Poppins';font-size:10pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-762aaaae{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-762aaab8{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-762ac5fc{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-762ac610{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-762ac611{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-762ac61a{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-762ac61b{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-762ac624{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}Field or AverageOrganic MatterMin CPOXCPMNACE ProteinField 014.535.649667.136.74Field 036.750.6547111.354.20County 9 Average (5 Fields)4.750.049079.005.30Hay/Silage Average (14 Fields)5.537.050092.007.80Pasture, Seeded Average (16 Fields)5.558.0520140.007.30Project Average (100 Fields)5.850.053099.008.50 # Style the table style_ft(ft) .cl-764391c2{}.cl-76384560{font-family:'Lato';font-size:11pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(255, 255, 255, 1.00);background-color:transparent;}.cl-76384574{font-family:'Poppins';font-size:10pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-76384575{font-family:'Poppins';font-size:10pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-763e15b2{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1.3;background-color:transparent;}.cl-763e15c6{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1.3;background-color:transparent;}.cl-763e15c7{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1.3;background-color:transparent;}.cl-763e320e{width:0.75in;background-color:rgba(2, 59, 44, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-763e3218{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(62, 61, 61, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-763e3222{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(62, 61, 61, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-763e3223{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(62, 61, 61, 1.00);border-top: 1pt solid rgba(62, 61, 61, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-763e322c{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(62, 61, 61, 1.00);border-top: 1pt solid rgba(62, 61, 61, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}Field or AverageOrganic MatterMin CPOXCPMNACE ProteinField 014.535.649667.136.74Field 036.750.6547111.354.20County 9 Average (5 Fields)4.750.049079.005.30Hay/Silage Average (14 Fields)5.537.050092.007.80Pasture, Seeded Average (16 Fields)5.558.0520140.007.30Project Average (100 Fields)5.850.053099.008.50"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/summarize_by_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize samples across the project — summarize_by_project","title":"Summarize samples across the project — summarize_by_project","text":"Summarize samples across project","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/summarize_by_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize samples across the project — summarize_by_project","text":"","code":"summarize_by_project(results_long)"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/summarize_by_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize samples across the project — summarize_by_project","text":"results_long Dataframe tidy, long format columns: sampleId, texture, measurement_group, abbr, value.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/summarize_by_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize producer's samples with averages by grouping variable — summarize_by_var","title":"Summarize producer's samples with averages by grouping variable — summarize_by_var","text":"Summarize producer's samples averages grouping variable","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/summarize_by_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize producer's samples with averages by grouping variable — summarize_by_var","text":"","code":"summarize_by_var(results_long, producer_samples, var)"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/summarize_by_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize producer's samples with averages by grouping variable — summarize_by_var","text":"results_long Dataframe tidy, long format columns: sampleId, texture, measurement_group, abbr, value. producer_samples Dataframe tidy, long format columns: measurement_group, abbr, value. var Variable summarize .","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/theme_facet_strip.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme for facetted strip plots — theme_facet_strip","title":"Theme for facetted strip plots — theme_facet_strip","text":"Theme facetted strip plots","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/theme_facet_strip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme for facetted strip plots — theme_facet_strip","text":"","code":"theme_facet_strip(   ...,   body_font = \"Poppins\",   strip_color = washi::washi_pal[[\"standard\"]][[\"blue\"]],   strip_text_color = \"white\" )"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/theme_facet_strip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theme for facetted strip plots — theme_facet_strip","text":"... arguments pass ggplot2::theme(). body_font Font family use throughout plot. Defaults \"Poppins\". strip_color Color facet strip background. Defaults WaSHI blue. strip_text_color Color facet strip text. Defaults white.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/theme_facet_strip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Theme for facetted strip plots — theme_facet_strip","text":"","code":"# Read in wrangled example plot data # See `data_wrangling.R` for processing steps df_plot_path <- soils_example(\"df_plot.RDS\") df_plot <- readRDS(df_plot_path)  # Subset df to just biological measurement group df_plot_bio <- df_plot |>   subset(measurement_group == \"biological\")  # Make strip plot with all measurements and set scales based on # the category column and then apply theme.  # NOTE: the plot gets piped into the `set_scales()` function, which gets # added to `theme_facet_strip()`.  make_strip_plot(   df_plot_bio,   x = dummy,   y = value,   id = sampleId,   group = abbr_unit,   tooltip = label,   color = category,   size = category,   alpha = category,   shape = category ) |>   set_scales() +   theme_facet_strip(body_font = \"sans\")   # Example without setting theme make_strip_plot(   df_plot_bio,   x = dummy,   y = value,   id = sampleId,   group = abbr_unit,   tooltip = label,   color = category,   size = category,   alpha = category,   shape = category ) |>   set_scales()"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/unit_hline.html","id":null,"dir":"Reference","previous_headings":"","what":"Add bottom border to specific columns in flextable — unit_hline","title":"Add bottom border to specific columns in flextable — unit_hline","text":"Use columns units merged together add bottom border make obvious columns share units.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/unit_hline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add bottom border to specific columns in flextable — unit_hline","text":"","code":"unit_hline(ft, header)"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/unit_hline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add bottom border to specific columns in flextable — unit_hline","text":"ft flextable object header Another dataframe three columns: First column contains top header row. template, abbreviation measurement (.e. Organic Matter). Second column, called \"key\", contains join key. template, first column. Third column contains second header row. template, unit (.e. %).","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/unit_hline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add bottom border to specific columns in flextable — unit_hline","text":"Flextable object bottom borders added.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/unit_hline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add bottom border to specific columns in flextable — unit_hline","text":"Field Average pH EC CEC Total C TOC Inorganic C  mmhos/cm cmolc/kg % Field 01 6.7 0.42 7.8 1.85 1.85  Field 03 7.6 0.60 10.1 1.65 1.53 0.12 County 9 Average (5 Fields) 7.1 0.48 8.7 1.70 1.60 0.11 Hay/Silage Average (14 Fields) 6.1 0.43 15.0 2.40 2.40  Pasture, Seeded Average (16 Fields) 6.2 0.33 14.0 2.70 2.70 0.11 Project Average (100 Fields) 6.1 0.74 15.0 2.90 2.90 0.19 Field Average pH EC CEC Total C TOC Inorganic C   mmhos/cm cmolc/kg % % % Field 01 6.7 0.42 7.8 1.85 1.85  Field 03 7.6 0.60 10.1 1.65 1.53 0.12 County 9 Average (5 Fields) 7.1 0.48 8.7 1.70 1.60 0.11 Hay/Silage Average (14 Fields) 6.1 0.43 15.0 2.40 2.40  Pasture, Seeded Average (16 Fields) 6.2 0.33 14.0 2.70 2.70 0.11 Project Average (100 Fields) 6.1 0.74 15.0 2.90 2.90 0.19","code":"# Read in wrangled table data # See `data_wrangling.R` for processing steps headers_path <- soils_example(\"headers.RDS\") headers <- readRDS(headers_path)  tables_path <- soils_example(\"tables.RDS\") tables <- readRDS(tables_path)  # Input dataframes headers$chemical #> # A tibble: 7 × 3 #>   abbr             key              unit       #>   <chr>            <chr>            <chr>      #> 1 pH               pH               \"\"         #> 2 EC               EC               \"mmhos/cm\" #> 3 CEC              CEC              \"cmolc/kg\" #> 4 Total C          Total C          \"%\"        #> 5 TOC              TOC              \"%\"        #> 6 Inorganic C      Inorganic C      \"%\"        #> 7 Field or Average Field or Average \"\"          tables$chemical #> # A tibble: 6 × 7 #>   `Field or Average`                pH    EC   CEC `Total C`   TOC `Inorganic C` #>   <chr>                          <dbl> <dbl> <dbl>     <dbl> <dbl>         <dbl> #> 1 \"Field 01\"                       6.7  0.42   7.8      1.85  1.85         NA    #> 2 \"Field 03\"                       7.6  0.6   10.1      1.65  1.53          0.12 #> 3 \"County 9 Average \\n(5 Fields…   7.1  0.48   8.7      1.7   1.6           0.11 #> 4 \"Hay/Silage Average \\n(14 Fie…   6.1  0.43  15        2.4   2.4         NaN    #> 5 \"Pasture, Seeded Average \\n(1…   6.2  0.33  14        2.7   2.7           0.11 #> 6 \"Project Average \\n(100 Field…   6.1  0.74  15        2.9   2.9           0.19  # Make the flextable make_ft(   table = tables$chemical,   header = headers$chemical ) |> # Style the flextable style_ft() |> # Add the white line under the columns with the same units unit_hline(header = headers$chemical) .cl-78790a1c{}.cl-786dfdca{font-family:'Lato';font-size:11pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(255, 255, 255, 1.00);background-color:transparent;}.cl-786dfdde{font-family:'Poppins';font-size:10pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-786dfddf{font-family:'Poppins';font-size:10pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-78732b2e{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1.3;background-color:transparent;}.cl-78732b42{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1.3;background-color:transparent;}.cl-78732b4c{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1.3;background-color:transparent;}.cl-7873488e{width:0.75in;background-color:rgba(2, 59, 44, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-78734898{width:0.75in;background-color:rgba(2, 59, 44, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(255, 255, 255, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-787348a2{width:0.75in;background-color:rgba(2, 59, 44, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(255, 255, 255, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-787348ac{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(62, 61, 61, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-787348ad{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(62, 61, 61, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-787348ae{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(62, 61, 61, 1.00);border-top: 1pt solid rgba(62, 61, 61, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-787348b6{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(62, 61, 61, 1.00);border-top: 1pt solid rgba(62, 61, 61, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}Field or AveragepHECCECTotal CTOCInorganic Cmmhos/cmcmolc/kg%Field 016.70.427.81.851.85Field 037.60.6010.11.651.530.12County 9 Average (5 Fields)7.10.488.71.701.600.11Hay/Silage Average (14 Fields)6.10.4315.02.402.40Pasture, Seeded Average (16 Fields)6.20.3314.02.702.700.11Project Average (100 Fields)6.10.7415.02.902.900.19 # Example without `unit_hline()` make_ft(   table = tables$chemical,   header = headers$chemical ) |> # Style the flextable style_ft() .cl-78a838dc{}.cl-789ba784{font-family:'Lato';font-size:11pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(255, 255, 255, 1.00);background-color:transparent;}.cl-789ba798{font-family:'Poppins';font-size:10pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-789ba7a2{font-family:'Poppins';font-size:10pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-78a1e5c2{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1.3;background-color:transparent;}.cl-78a1e5d6{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1.3;background-color:transparent;}.cl-78a1e5d7{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1.3;background-color:transparent;}.cl-78a20b42{width:0.75in;background-color:rgba(2, 59, 44, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-78a20b4c{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(62, 61, 61, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-78a20b56{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(62, 61, 61, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-78a20b57{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(62, 61, 61, 1.00);border-top: 1pt solid rgba(62, 61, 61, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-78a20b60{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(62, 61, 61, 1.00);border-top: 1pt solid rgba(62, 61, 61, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}Field or AveragepHECCECTotal CTOCInorganic Cmmhos/cmcmolc/kg%%%Field 016.70.427.81.851.85Field 037.60.6010.11.651.530.12County 9 Average (5 Fields)7.10.488.71.701.600.11Hay/Silage Average (14 Fields)6.10.4315.02.402.40Pasture, Seeded Average (16 Fields)6.20.3314.02.702.700.11Project Average (100 Fields)6.10.7415.02.902.900.19"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/usdaTexture.html","id":null,"dir":"Reference","previous_headings":"","what":"USDA texture data — usdaTexture","title":"USDA texture data — usdaTexture","text":"US Department Agriculture textural classes","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/usdaTexture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"USDA texture data — usdaTexture","text":"","code":"usdaTexture"},{"path":[]},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/usdaTexture.html","id":"usdatexture-a-list-of-two-data-frames-polygons-contains-rows-and-columns-and-labels-contains-rows-and-columns-","dir":"Reference","previous_headings":"","what":"usdaTexture A list of two data frames: polygons contains 53 rows and 4 columns and labels contains 12 rows and 5 columns.","title":"USDA texture data — usdaTexture","text":"clay Percentage clay content sand Percentage sand content silt Percentage silt content label Texture class angle Angle rotate label texture triangle","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/usdaTexture.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"USDA texture data — usdaTexture","text":"Adapted data(USDA, package = \"ggtern\").","code":""}]
