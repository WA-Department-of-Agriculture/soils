[{"path":"https://wa-department-of-agriculture.github.io/soils/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Washington State Department Agriculture Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/customize.html","id":"report-metadata-and-options","dir":"Articles","previous_headings":"","what":"Report metadata and options","title":"Customize & write","text":"report metadata options set YAML setup chunk 01_producer-report.qmd. Start YAML (Yet Another Markup Language) header, content sandwiched three dashes (---) top file. contains document metadata, parameters, customization options. fields need edit : title appears top report. logo appears title text (see markdown primer help image syntax). subtitle appears title toward right side. params define parameter values used iteratively rendering report RStudio Render button. must existing combination producer ID year sample results data. producer_id choose producer ID data want render report . year choose year samples chosen producer ID include report. Ignore YAML fields values like explore ways customizing reports. Learn available YAML fields HTML documents MS Word documents.","code":"# EDIT: Replace logo.png in images folder with your own and add project name. title: \"![](images/beautiful-soil.png) The Best Soil Health Survey\" # EDIT: Subtitle right aligned below title. subtitle: \"Results from 2024\" # EDIT: Choose a valid producer_id/year combo that exists in your dataset. params:   producer_id: \"Sammy Sunflower\"   year: 2024"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/customize.html","id":"report-content","dir":"Articles","previous_headings":"","what":"Report content","title":"Customize & write","text":"01_producer-report.qmd uses Quarto {{< include >}} shortcode embed content within main parameterized report. Edit following Quarto files fit project adjust/remove soil measurements tested. Project Results heading 01_producer-report.qmd, update sample depth: samples collected [EDIT: SOIL DEPTH (e.g. 0-6 inches, 0-30 cm)]. 01_producer-report.qmd calls 02_secion-template.qmd child document generate section measurement_group defined data-dictionary.csv. shouldn’t need edit 02_secion-template.qmd unless want advanced customization.","code":"├── 03_project-summary.qmd ├── 04_soil-health-background.qmd ├── 05_physical-measurements.qmd ├── 06_biological-measurements.qmd ├── 07_chemical-measurements.qmd ├── 08_looking-forward.qmd"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/customize.html","id":"style-and-theme","dir":"Articles","previous_headings":"","what":"Style and theme","title":"Customize & write","text":"look feel reports can customized changing fonts colors match branding. plot table outputs controlled set-fonts-colors chunk 01_producer-report.qmd. HTML reports styled styles.css file. MS Word reports styled using word-template.docx template file.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/customize.html","id":"set-fonts-colors-chunk","dir":"Articles","previous_headings":"Style and theme","what":"set-fonts-colors chunk","title":"Customize & write","text":"fonts colors used tables plots report defined chunk. Change values match branding.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/customize.html","id":"style-sheets","dir":"Articles","previous_headings":"Style and theme","what":"Style sheets","title":"Customize & write","text":"style sheets can found resources directory edited customize report appearance match branding.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/customize.html","id":"html","dir":"Articles","previous_headings":"Style and theme > Style sheets","what":"HTML","title":"Customize & write","text":"styles.css controls appearance HTML reports. Learn CSS.","code":"/* Edit these :root variables */ :root {     --primary-color: #023B2C;     --secondary-color: #335c67;     --link-color: #a60f2d;     --light-color: #F2F0E6;     --fg-color: white; /* color for text with colored background*/     --heading-font: \"Georgia\";     --body-font: \"Arial\"; }"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/customize.html","id":"ms-word","dir":"Articles","previous_headings":"Style and theme > Style sheets","what":"MS Word","title":"Customize & write","text":"Open word-template.docx modify styles according Quarto documentation Microsoft documentation.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/data.html","id":"access-the-example-datasets","dir":"Articles","previous_headings":"","what":"Access the example datasets","title":"Import your data","text":"example dataset data dictionary included every {soils} project. Access .csv files data folder, load package call dataframes name shown . Use washi_data data_dictionary templates formatting data use {soils} functions reports.","code":"library(soils) head(washi_data, 5) |> knitr::kable() head(data_dictionary, 5) |> knitr::kable()"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/data.html","id":"data-template","dir":"Articles","previous_headings":"","what":"Data template","title":"Import your data","text":"data must contain required columns soil measurement must column, shown washi_data. data must required columns. However, columns bold required values. year <int> used select samples included report. sample_id <chr> must unique throughout dataset. farm_name <chr> included top report. blank, replaced “Farm: producer_id”. producer_id <chr> must unique throughout dataset used select samples included report. field_name <chr> must unique across fields producer displayed tables tool tips maps. blank, replaced “Field field_id”. field_id <chr> must unique across fields producer. county <chr> used group summarize samples county producer. Can blank. crop <chr> used group summarize samples crop producer. Can blank. longitude <int> latitude <int> used map sample point. texture <chr> used “physical” measurement group table. column used texture triangle plot, instead created percentage sand, silt, clay measurement results. soil measurement must column dataset corresponding row data dictionary, shown Dictionary template. Measurement columns come required columns easy selection tidy-long chunk.","code":"dplyr::glimpse(washi_data) #> Rows: 100 #> Columns: 42 #> $ year                   <int> 2023, 2022, 2022, 2022, 2023, 2022, 2023, 2022,… #> $ sample_id              <chr> \"23-WUY05-01\", \"22-RHM05-02\", \"22-ENR07-02\", \"2… #> $ farm_name              <chr> \"Farm 150\", \"Farm 085\", \"Farm 058\", \"Farm 061\",… #> $ producer_id            <chr> \"WUY05\", \"RHM05\", \"ENR07\", \"ZTD04\", \"WUY05\", \"B… #> $ field_name             <chr> \"Field 01\", \"Field 02\", \"Field 02\", \"Field 03\",… #> $ field_id               <int> 1, 2, 2, 3, 3, 2, 1, 2, 1, 1, 1, 1, 2, 8, 2, 1,… #> $ county                 <chr> \"County 9\", \"County 18\", \"County 11\", \"County 1… #> $ crop                   <chr> \"Hay/Silage\", \"Green Manure\", \"Vegetable\", \"Her… #> $ longitude              <int> -119, -123, -122, -120, -119, -117, -118, -117,… #> $ latitude               <int> 49, 47, 47, 46, 49, 47, 49, 47, 48, 48, 46, 47,… #> $ texture                <chr> \"Loamy Sand\", \"Sandy Loam\", \"Silt Loam\", \"Silt … #> $ bd_g_cm3               <dbl> 1.30, 0.88, 1.21, 1.37, 1.22, 1.14, 1.44, 1.24,… #> $ pmn_lb_ac              <dbl> 67.13, 129.97, 122.17, 95.24, 111.35, 61.92, -7… #> $ nh4_n_mg_kg            <dbl> 1.6, 21.6, 8.1, 13.8, 3.9, 12.4, 2.4, 12.4, 2.3… #> $ no3_n_mg_kg            <dbl> 9.2, 6.1, 25.3, 16.9, 6.7, 4.3, 21.5, 7.4, 2.3,… #> $ poxc_mg_kg             <int> 496, 571, 419, 424, 547, 235, 501, 480, 965, 10… #> $ ph                     <dbl> 6.7, 5.9, 6.3, 6.8, 7.6, 5.5, 5.5, 5.9, 6.3, 6.… #> $ ec_mmhos_cm            <dbl> 0.42, 0.05, 0.60, 2.18, 0.60, 0.81, 0.55, 0.34,… #> $ k_mg_kg                <int> 498, 198, 294, 229, 273, 372, 289, 355, 253, 73… #> $ ca_mg_kg               <int> 1380, 780, 1760, 3380, 2820, 1480, 1140, 2080, … #> $ mg_mg_kg               <dbl> 145.2, 96.8, 266.2, 738.1, 193.6, 229.9, 133.1,… #> $ na_mg_kg               <dbl> 16.1, 20.7, 20.7, 80.5, 13.8, 16.1, 23.0, 16.1,… #> $ cec_meq_100g           <dbl> 7.8, 10.5, 13.0, 14.4, 10.1, 12.4, 12.9, 14.8, … #> $ b_mg_kg                <dbl> 0.22, 0.09, 0.41, 0.72, 0.25, 0.18, 0.12, 0.21,… #> $ cu_mg_kg               <dbl> 0.6, 0.4, 4.2, 1.1, 0.7, 1.0, 0.5, 1.4, 1.1, 0.… #> $ fe_mg_kg               <int> 26, 28, 141, 37, 15, 64, 44, 85, 129, 31, 86, 3… #> $ mn_mg_kg               <dbl> 1.5, 2.7, 4.1, 11.5, 1.7, 9.0, 4.4, 17.1, 9.9, … #> $ s_mg_kg                <dbl> 4.29, 9.41, 26.73, 51.70, 3.29, 4.51, 9.13, 8.2… #> $ zn_mg_kg               <dbl> 1.7, 0.8, 4.2, 2.4, 0.8, 0.5, 34.0, 0.9, 7.8, 0… #> $ total_c_percent        <dbl> 1.85, 2.88, 1.68, 1.40, 1.65, 1.55, 2.25, 2.37,… #> $ total_n_percent        <dbl> 0.16, 0.18, 0.14, 0.12, 0.16, 0.13, 0.15, 0.17,… #> $ ace_g_protein_kg_soil  <dbl> 6.74, 21.50, 10.90, 5.53, 4.20, 10.30, 7.73, 6.… #> $ sand_percent           <int> 44, 69, 11, 36, 64, 24, 80, 22, 62, 48, 80, 69,… #> $ silt_percent           <int> 23, 21, 79, 51, 33, 62, 16, 57, 26, 45, 14, 27,… #> $ clay_percent           <int> 3, 10, 10, 13, 3, 14, 4, 21, 12, 7, 6, 4, 10, 1… #> $ min_c_96hr_mg_c_kg_day <dbl> 35.60, 30.00, 15.00, 67.50, 50.60, 25.50, 30.60… #> $ p_olsen_mg_kg          <int> 15, 37, 73, 30, 8, 33, 27, 29, 40, 16, 19, 11, … #> $ wsa_percent            <dbl> 88.5, 92.6, 91.3, 94.3, 84.6, 86.6, 86.9, 82.5,… #> $ om_percent             <dbl> 4.5, 5.8, 2.4, 2.9, 6.7, 3.2, 27.0, 4.2, 7.9, 5… #> $ toc_percent            <dbl> 1.85, 2.88, 1.68, 1.40, 1.53, 1.55, 2.25, 2.37,… #> $ whc_in_ft              <dbl> 1.01, 1.08, 2.77, 1.93, 1.28, 2.25, 0.84, 2.14,… #> $ inorganic_c_percent    <dbl> NA, NA, NA, NA, 0.12, NA, NA, NA, NA, NA, NA, N…"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/data.html","id":"dictionary-template","dir":"Articles","previous_headings":"","what":"Dictionary template","title":"Import your data","text":"data dictionary used group order soil measurements, nicely format labels tables plots. example data_dictionary contains UTF-8 encoded superscripts, subscripts, special characters. properly encode data dictionary UTF-8, save data folder CSV UTF-8 (Comma delimited) (*.csv) MS Excel.  data dictionary must required columns every soil measurement included data. measurement_group <chr> determines soil measurements grouped. order groups appear determined set-groups chunk. measurement_group_label <chr> section heading measurement group. order <int> determines sequence soil measurements within measurement_group tables plots. column_name <chr> used join dictionary data. Must exactly match column names soil measurements dataset. abbr <chr> unit <chr> soil measurements labeled tables abbreviation column header unit secondary spanning header. abbr_unit <chr> soil measurements labeled plots uses HTML tag include line break abbreviation unit.","code":"dplyr::glimpse(data_dictionary) #> Rows: 32 #> Columns: 7 #> $ measurement_group       <chr> \"biological\", \"biological\", \"biological\", \"bio… #> $ measurement_group_label <chr> \"Biological\", \"Biological\", \"Biological\", \"Bio… #> $ column_name             <chr> \"om_percent\", \"min_c_96hr_mg_c_kg_day\", \"poxc_… #> $ order                   <int> 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5… #> $ abbr                    <chr> \"Organic Matter\", \"Min C\", \"POXC\", \"PMN\", \"ACE… #> $ unit                    <chr> \"%\", \"mg/kg/day\", \"ppm\", \"lb/ac\", \"g/kg\", \"\", … #> $ abbr_unit               <chr> \"Organic Matter<br>(%)\", \"Min C<br>(mg/kg/day)…"},{"path":[]},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/data.html","id":"extra-columns-in-data","dir":"Articles","previous_headings":"Data/dictionary mismatches","what":"Extra columns in data","title":"Import your data","text":"Soil measurements data dictionary cause report error data-validation chunk. example, rendering report fail dataset contains pH CEC results dictionary contains pH. Either add measurement dictionary, remove measurement column data. additional columns data aren’t soil measurements, include required_cols vector data-validation chunk.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/data.html","id":"extra-rows-in-dictionary","dir":"Articles","previous_headings":"Data/dictionary mismatches","what":"Extra rows in dictionary","title":"Import your data","text":"Soil measurements dictionary data error affect report. example, report simply show pH results dictionary contains pH CEC data contains pH results.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/data.html","id":"your-data","dir":"Articles","previous_headings":"","what":"Your data","title":"Import your data","text":"project data dictionary files match structure examples saved data folder, follow along changes code chunks 01_producer-report.qmd. Code need change marked text “EDIT:”. Find edit markers RStudio project Ctrl + Shift + F open Find Files wizard. changes demonstration purposes , actual changes based data dictionary.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/data.html","id":"load-data-chunk","dir":"Articles","previous_headings":"Your data","what":"load-data chunk","title":"Import your data","text":"Replace washi-data.csv name data file (-data.csv).","code":"# EDIT: Add your cleaned lab data to the data folder, using 'washi-data.csv' as # a template.  # Load lab results data <- read.csv(   here::here(\"data/my-data.csv\"),   check.names = FALSE,   encoding = \"UTF-8\" )"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/data.html","id":"load-dictionary-chunk","dir":"Articles","previous_headings":"Your data","what":"load-dictionary chunk","title":"Import your data","text":"Change data-dictionary.csv name dictionary file (-dictionary.csv). using subscripts, superscripts, special characters, make sure csv saved UTF-8 encoding (see Dictionary template ).","code":"# EDIT: Add your data dictionary to the data folder, using 'data-dictionary.csv' # as a template.  # Load data dictionary dictionary <- read.csv(   here::here(\"data/my-dictionary.csv\"),   check.names = FALSE,   # Set encoding for using subscripts, superscripts, special characters   encoding = \"UTF-8\" )"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/data.html","id":"set-groups-chunk","dir":"Articles","previous_headings":"Your data","what":"set-groups chunk","title":"Import your data","text":"Add remove groups measurement_groups vector match data dictionary set order appear results section report. macro micro removed chemical moved biological.","code":"# EDIT: Add, remove, or rearrange order of measurement groups to match your data # dictionary.  measurement_groups <- c(   \"physical\",   \"chemical\",   \"biological\" )"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/data.html","id":"tidy-long-chunk","dir":"Articles","previous_headings":"Your data","what":"tidy-long chunk","title":"Import your data","text":"Replace column range soil measurements example washi-data.csv (12:42) column range soil measurements data (12:26). chunk tidies data wide long summarization visualization.","code":"# EDIT: `washi_data` example has soil measurements in columns 12 - 42. Replace # this column range with the column indices of the soil measurements in your # dataset.  # Tidy data into long format and join with data dictionary results_long <- data |>   dplyr::mutate(     dplyr::across(       # EDIT: replace with the column range of your soil measurements       12:26,       as.numeric     )   ) |>   tidyr::pivot_longer(     # EDIT: replace with the column range of your soil measurements     cols = 12:26,     names_to = \"measurement\"   )"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/data.html","id":"data-validation-chunk","dir":"Articles","previous_headings":"Your data","what":"data-validation chunk","title":"Import your data","text":"chunk checks mismatches described Data/dictionary mismatches making sure column names dataset either required_cols vector column_name column -dictionary.csv. example, add extra column named tillage -data.csv without changing dictionary. clicking Render button, report failed. error message says error occurred lines 94-115 data-validation chunk tillage missing expected values, elements required_cols dictionary$column_name. Adding \"tillage\" required_cols prevents error. demonstrate another data/dictionary mismatch error, remove cec_meq_100g dictionary keeping dataset. error occurred cec_meq_100g missing expected values. Either add cec_meq_100g back dictionary remove column dataset fix error. See troubleshooting article help debugging errors.","code":"Quitting from lines 94-115 [data-validation] (01_producer-report.qmd) Error: ! names(data) (`actual`) isn't fully contained within c(required_cols, dictionary$column_name) (`expected`). * Missing from `expected`: \"tillage\" * Present in `expected`:   \"year\", \"sample_id\", \"farm_name\", \"producer_id\", \"field_name\", \"field_id\", \"county\", \"crop\", \"longitude\", ... # OPTIONAL EDIT: If you have extra columns in `data`, add them to this vector. required_cols <- c(   \"year\",   \"sample_id\",   \"farm_name\",   \"producer_id\",   \"field_name\",   \"field_id\",   \"county\",   \"crop\",   \"longitude\",   \"latitude\",   \"texture\",   \"tillage\" )  # Check all column names in `data` are in the `required_cols` vector or # `column_name` column of `dictionary`. testthat::expect_in(names(data), c(required_cols, dictionary$column_name)) Quitting from lines 94-115 [data-validation] (01_producer-report.qmd) Error: ! names(data) (`actual`) isn't fully contained within c(...) (`expected`). * Missing from `expected`: \"cec_meq_100g\" * Present in `expected`:   \"year\", \"sample_id\", \"farm_name\", \"producer_id\", \"field_name\", \"field_id\", \"county\", \"crop\", \"texture\", ..."},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/examples.html","id":"html","dir":"Articles","previous_headings":"","what":"HTML","title":"Example reports","text":"HTML reports contain interactive features table contents, map, figures, downloadable spreadsheet. reports “self-contained” embed dependencies HTML file. result, file size can quite large. reports can distributed cloud storage (Google Drive, Box.com, Dropbox.com, etc.). Report recipients must download .html file computer open file web browser. Open report new tab.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/examples.html","id":"ms-word","dir":"Articles","previous_headings":"","what":"MS Word","title":"Example reports","text":"example report rendered .docx file converted PDF web publishing. Open report new tab. Oops! browser doesn’t seem support embedded PDFs. Try downloading instead.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/markdown.html","id":"text-formatting","dir":"Articles","previous_headings":"","what":"Text formatting","title":"Markdown","text":"","code":"*italics*, **bold**, ***bold italics*** superscript^2^ / subscript~2~ ~~strikethrough~~ `verbatim code`"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/markdown.html","id":"headings","dir":"Articles","previous_headings":"","what":"Headings","title":"Markdown","text":"","code":"# Header 1 ###### Header 6"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/markdown.html","id":"links-images","dir":"Articles","previous_headings":"","what":"Links & images","title":"Markdown","text":"Learn article Figures.","code":"<https://quarto.org> [Quarto](https://quarto.org) ![Caption](images/logo.png){width=100 fig-alt=\"soils logo\"}"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/markdown.html","id":"lists","dir":"Articles","previous_headings":"","what":"Lists","title":"Markdown","text":"sub-item 1 sub-sub-item 1 item 2 Continued (indent 4 spaces) ordered list sub-sub-item 1 list whose numbering continues interruption Note unlike Markdown renderers (notably Jupyter GitHub), lists Quarto require entire blank line list. Otherwise list rendered list form, rather appear normal text along single line.","code":"* unordered list     + sub-item 1     + sub-item 2         - sub-sub-item 1 *   item 2      Continued (indent 4 spaces) 1. ordered list 2. item 2     i) sub-item 1          A.  sub-sub-item 1 (@)  A list whose numbering  continues after  (@)  an interruption"},{"path":[]},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/markdown.html","id":"markdown-syntax","dir":"Articles","previous_headings":"Tables","what":"Markdown syntax","title":"Markdown","text":"","code":"| Right | Left | Default | Center | |------:|:-----|---------|:------:| |   12  |  12  |    12   |    12  | |  123  |  123 |   123   |   123  | |    1  |    1 |     1   |     1  |"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/markdown.html","id":"output","dir":"Articles","previous_headings":"Tables","what":"Output","title":"Markdown","text":"Learn article Tables.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/markdown.html","id":"blocks","dir":"Articles","previous_headings":"","what":"Blocks","title":"Markdown","text":"Blockquote Line Block    Spaces newlines    preserved","code":"> Blockquote | Line Block |   Spaces and newlines |   are preserved"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/markdown.html","id":"special-characters","dir":"Articles","previous_headings":"","what":"Special characters","title":"Markdown","text":"","code":"endash: -- emdash: ---"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/project.html","id":"option-1--rstudio-project-wizard","dir":"Articles","previous_headings":"","what":"Option 1. RStudio project wizard","title":"Create a {soils} project","text":"RStudio user interface easiest recommended way create new {soils} project. Open RStudio > File > New Project > New Directory > Quarto Soil Health Report  Enter desired directory name, browse want project live, check whether want project open new RStudio session.  new RStudio project open template Quarto report (01_producer-report.qmd) R script (render-reports.R) render reports . rest project files appear files pane.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/project.html","id":"option-2--rstudio-console","dir":"Articles","previous_headings":"","what":"Option 2. RStudio console","title":"Create a {soils} project","text":"Run code console create {soils} project called “soils-demo” default working directory. following print console. Note location new project.","code":"soils::create_soils(path = \"soils-demo\")"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/project.html","id":"project-structure","dir":"Articles","previous_headings":"","what":"Project structure","title":"Create a {soils} project","text":"options create launch new RStudio project files.","code":"├── 01_producer-report.qmd ├── 02_section-template.qmd ├── 03_project-summary.qmd ├── 04_soil-health-background.qmd ├── 05_physical-measurements.qmd ├── 06_biological-measurements.qmd ├── 07_chemical-measurements.qmd ├── 08_looking-forward.qmd ├── 09_acknowledgement.qmd ├── data │   ├── data-dictionary.csv │   └── washi-data.csv ├── images │   ├── biological.png │   ├── chemical.png │   ├── logo.png │   └── physical.png ├── R │   └── render-reports.R ├── resources │   ├── styles.css │   └── word-template.docx └── soils-demo.Rproj"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/quarto.html","id":"file-paths","dir":"Articles","previous_headings":"","what":"File paths","title":"Quarto","text":"soils::create_soils(path = \"soils-demo\") creates RStudio Project called “soils-demo” template Quarto (.qmd) files, example data, R script, images, style sheets, .Rproj file designates directory RStudio Project. template files use relative paths instead absolute paths ensure file paths work anyone’s computer.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/quarto.html","id":"absolute-vs-relative-paths","dir":"Articles","previous_headings":"File paths","what":"Absolute vs relative paths","title":"Quarto","text":"❌ Absolute paths start root directory provide full path specific file folder (C:/Users/jryan/Documents/R/projects/soils-demo/data/washi-data.csv). path work anyone’s computer unless operating system, user, directory structure, folder names match exactly. ✅ Relative paths relative working directory, project’s home (data/washi-data.csv). working RStudio project, default working directory always root project directory (.Rproj file ). path work anyone’s computer project directory.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/quarto.html","id":"here-package","dir":"Articles","previous_headings":"File paths","what":"{here} package","title":"Quarto","text":"Quarto file renders, default current working directory .qmd file lives. make code robust, {} package builds relative file paths takes care backslashes forward slashes path work matter operating system. example, new {soils} project, 01_producer-report.qmd imports data using read.csv(::(\"data/washi-data.csv\")).","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/quarto.html","id":"parameterized-reporting","dir":"Articles","previous_headings":"","what":"Parameterized reporting","title":"Quarto","text":"{soils} uses Quarto help generate parameterized reports participant survey template file. Parameterized reports like complex functions function .qmd template, input parameters, output reports.  learn parameterized reporting, see materials Jadey Ryan’s 20-minute presentation, follow along 2-hour code-along workshop, read Quarto parameters documentation.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/quarto.html","id":"quarto-specific-features","dir":"Articles","previous_headings":"","what":"Quarto specific features","title":"Quarto","text":"{soils} uses several intermediate advanced Quarto features, listed references reading.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/quarto.html","id":"shortcodes","dir":"Articles","previous_headings":"Quarto specific features","what":"Shortcodes","title":"Quarto","text":"Shortcodes special markdown directives generate various types content. markdown syntax uses shortcode name attributes inside angle brackets nested inside double curly braces {{< shortcode >}}. Read Shortcodes article.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/quarto.html","id":"pagebreak","dir":"Articles","previous_headings":"Quarto specific features > Shortcodes","what":"Pagebreak","title":"Quarto","text":"pagebreak inserts native page breaks document regardless report format (e.g., HTML, MS Word). Read Pagebreaks article.","code":"{{< pagebreak >}}"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/quarto.html","id":"include","dir":"Articles","previous_headings":"Quarto specific features > Shortcodes","what":"Include","title":"Quarto","text":"include embeds content separate .qmd file main report. shortens number lines main .qmd file makes markdown code project modular. Read Includes article. Examples found 01_producer-report.qmd shown .","code":"{{< include 03_project-summary.qmd >}}  {{< include 04_soil-health-background.qmd >}}"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/quarto.html","id":"knitrknit_child","dir":"Articles","previous_headings":"Quarto specific features","what":"knitr::knit_child()","title":"Quarto","text":"include shortcode limited generate dynamic sections “included” Quarto file. {soils} uses knitr::knit_child() function workaround, thanks Quishi Yan’s blog post. measurement group results section, 02_section-template.qmd used template generate section’s header, table, plot, page break. code create-measurement-group-sections code chunk 01_producer-report.qmd. purrr::map_chr() loops measurement group generate section child document. chunk option #| output: asis cat(sections, sep = \"\\n\") line, child documents embedded within main producer report.","code":"sections <- purrr::map_chr(measurement_groups, \\(group) {     # <1>   knitr::knit_child(     input = \"02_section-template.qmd\",     envir = environment(),     quiet = TRUE   ) })  cat(sections, sep = \"\\n\")                                     # <2>"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/quarto.html","id":"divs-and-spans","dir":"Articles","previous_headings":"Quarto specific features","what":"Divs and spans","title":"Quarto","text":"Add classes attributes regions content divs spans.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/quarto.html","id":"divs","dir":"Articles","previous_headings":"Quarto specific features > Divs and spans","what":"Divs","title":"Quarto","text":"Divs start end fence containing least three consecutive colons (:::). div separated blank lines preceding following blocks. Divs may may use curly braces {} around class attributes. example, columns standalone class, .column width=\"50%\" class attribute. Divs may also nested, shown . Optionally, three consecutive colons distinguish nested divs parents.","code":":::: columns  ::: {.column width=\"50%\"} Left column :::  ::: {.column width=\"50%\"} Right column :::  ::::"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/quarto.html","id":"spans","dir":"Articles","previous_headings":"Quarto specific features > Divs and spans","what":"Spans","title":"Quarto","text":"Bracketed text immediately followed class attributes curly braces {} treated span. rendered : Purple favorite color. Read Divs Spans documentation.","code":"[Purple]{style=\"color:purple;font-weight: bold;font-size: x-large;\"} is my favorite color."},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/quarto.html","id":"conditional-content","dir":"Articles","previous_headings":"Quarto specific features","what":"Conditional Content","title":"Quarto","text":"Conditional content classes attributes control whether content displayed given format. example, control visibility HTML formats, use div .content-visible class -format=\"html\" unless-format=\"html\" attribute. Read Conditional Content article.","code":"::: {.content-visible when-format=\"html\"} This interactive content will ONLY appear in HTML reports. :::  ::: {.content-visible unless-format=\"html\"} This static content will appear in all reports EXCEPT in HTML reports. :::"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/quarto.html","id":"tabsets","dir":"Articles","previous_headings":"Quarto specific features","what":"Tabsets","title":"Quarto","text":"Tabsets work HTML documents created ::: panel-tabset div. top-level heading within div creates new tab. Read Tabsets article. example shows 04_soil-health-background.qmd uses include shortcodes, nested divs, conditional content, tabset include tabset HTML reports.","code":"::: {.content-visible when-format=\"html\"} :::: panel-tabset {{< include 05_physical-measurements.qmd >}}  {{< include 06_biological-measurements.qmd >}}  {{< include 07_chemical-measurements.qmd >}} :::: :::  ::: {.content-visible unless-format=\"html\"} {{< include 05_physical-measurements.qmd >}}  {{< include 06_biological-measurements.qmd >}}  {{< include 07_chemical-measurements.qmd >}} :::"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/render.html","id":"using-rstudio","dir":"Articles","previous_headings":"","what":"Using RStudio","title":"Render your reports","text":"generate preview report default parameters1, use Render button keyboard shortcut (Ctrl + Shift + K). Use workflow quickly iterate content style. HTML reports, check Render Save option automatically update preview whenever save document.  Render example reports tutorial provides additional details rendering reports RStudio user interface.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/render.html","id":"using-render_reports-r","dir":"Articles","previous_headings":"","what":"Using render_reports.R","title":"Render your reports","text":"render-reports.R creates dataframe uses purrr::pwalk() iterate row, rendering reports HTML MS Word formats. rendering, reports moved folder called reports project directory. Edit render_reports.R read dataset load-data chunk 01_producer-report.qmd. example, dataset called -data.csv, replace washi-data.csv -data.csv Line 11. Click Source run script generate reports formats .  Optionally, render reports subset producers, filter dataframe include subset. last line code block demonstrates filter data three specific producers.","code":"# EDIT: Replace `washi-data.csv` with the name of the same dataset used in # 01_producer-report.qmd. data <- read.csv(   here::here(\"data/washi-data.csv\"),   check.names = FALSE,   encoding = \"UTF-8\" ) |>    dplyr::filter(producer_id %in% c(\"WUY05\", \"RHM05\", \"ENR07\"))"},{"path":[]},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/troubleshoot.html","id":"what-to-do-when-the-report-fails-to-render","dir":"Articles","previous_headings":"","what":"What to do when the report fails to render?","title":"Troubleshoot","text":"report fails render, Background Jobs tab RStudio likely open error message hinting issue occurred. Keep reading get idea R code, Quarto document, environment issues look like resolve . ’re still stuck, see guides debugging plugging error messages search engines like Google linked Get help section.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/troubleshoot.html","id":"r-code-issues","dir":"Articles","previous_headings":"What to do when the report fails to render?","what":"R code issues","title":"Troubleshoot","text":"Note error occurred message . Restart R (Ctrl + Shift + F10). “Run chunks” Code menu, Run toolbar button, Ctrl + Alt + R. issue R code, recreate problem can interactively debug. error fixed chunk runs successfully, try rendering report . demonstrate, add typo data file name (washi-dataa.csv instead washi-data.csv) try rendering. Background Jobs pane RStudio opened error message telling us location sequence calls led function errored. Now know rendering failed lines 57-66 load-data chunk read.csv() function. Clear environment restarting R session. Run chunks. stops load-data specific error message informing us washi-dataa.csv doesn’t exist data folder. Fix typo removing extra . Rerun chunk. successful, try rendering report.","code":"processing file: 01_producer-report.qmd 1/61                                     2/61 [setup]                             3/61                                     4/61 [load-data]                          Quitting from lines 57-66 [load-data] (01_producer-report.qmd) Error in `file()`: ! cannot open the connection Backtrace:  1. utils::read.csv(...)  2. utils::read.table(...)  3. base::file(file, \"rt\") Execution halted > # Load lab results > data <- read.csv( +   here::here(\"data/washi-dataa.csv\"), +   check.names = FALSE, +   encoding = \"UTF-8\" + ) Error in file(file, \"rt\") : cannot open the connection In addition: Warning message: In file(file, \"rt\") :   cannot open file 'C:/Users/jryan/Documents/R/projects/soils-demo/data/washi-dataa.csv':  No such file or directory"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/troubleshoot.html","id":"run-all-chunks-below","dir":"Articles","previous_headings":"What to do when the report fails to render? > R code issues","what":"“Run All Chunks Below”","title":"Troubleshoot","text":"generally advisable work interactively “Run Chunks ” Run toolbar button working Quarto document. However, create-measurement-group-sections chunk properly execute interactively run envir argument knitr::knit_child(). successfully “Run Chunks ”, comment chunk Ctrl + Shift + C. Don’t forget uncomment done troubleshooting!","code":"> # Chunk 26: create-measurement-group-sections > #| output: asis > sections <- purrr::map_chr(measurement_groups, \\(group) { +   knitr::knit_child( +     input = \"02_section-template.qmd\", +     envir = environment(), +     quiet = TRUE +   ) + }) Error in `purrr::map_chr()`: ℹ In index: 1. Caused by error in `setwd()`: ! character argument expected"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/troubleshoot.html","id":"quarto-document-issues","dir":"Articles","previous_headings":"What to do when the report fails to render?","what":"Quarto document issues","title":"Troubleshoot","text":"Quarto document issues tend YAML chunk options. troubleshooting steps generally R code issues. Note error occurred message . Restart R (Ctrl + Shift + F10). Try address error. Render . demonstrate, add extra space year:. Rendering fails get following error message telling us bad indentation line 9, column 8. fix , delete extra space make sure entries params: aligned.","code":"params:   producer_id: WUY05    year: 2023 ERROR: YAMLError: bad indentation of a mapping entry at line 9, column 8:        year: 2023            ^"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/troubleshoot.html","id":"environment-issues","dir":"Articles","previous_headings":"What to do when the report fails to render?","what":"Environment issues","title":"Troubleshoot","text":"Differences Quarto environment interactive R environment can cause issues. common difference working directory. Review File Paths section Quarto primer. Check working directory expect including getwd() setup chunk. Running chunk interactively prints \"C:/Users/jryan/Documents/R/projects/soils-demo\" console, rendering report prints \"[1] \"C:/Users/jryan/Documents/R/projects/soils-demo/template\" report. Sometimes report won’t error, won’t look expected. example, move .qmd files subfolder called template, report access images resources subdirectories main project folder. rendering HTML, Background Jobs tab print warnings, report fonts colors specified styles.css images missing. rendering MS Word, report fail find word-template.docx. create-measurement-group-sections chunk shown “Run Chunks ” demonstrates complicated environment issue. chunk runs fine rendering report errors running interactively.","code":"[WARNING] Could not fetch resource resources/styles.css [WARNING] Could not fetch resource images/logo.png [WARNING] Could not fetch resource images/physical.png [WARNING] Could not fetch resource images/biological.png [WARNING] Could not fetch resource images/chemical.png Output created: 01_producer-report.html [WARNING] Could not fetch resource images/logo.png: replacing image with description [WARNING] Could not fetch resource images/physical.png: replacing image with description [WARNING] Could not fetch resource images/biological.png: replacing image with description [WARNING] Could not fetch resource images/chemical.png: replacing image with description File resources/word-template.docx not found in resource path"},{"path":[]},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/troubleshoot.html","id":"invalid-parameter-values","dir":"Articles","previous_headings":"Common errors","what":"Invalid parameter values","title":"Troubleshoot","text":"parameter values set YAML header must exist data. Fix error either changing params YAML adding sample results producer_id year data. Rendering report invalid producer_id year combination results following error message.","code":"Quitting from lines 206-249 [get-producer-info] (01_producer-report.qmd) Error: ℹ Update `params` in YAML to a valid `producer_id` and `year` combo. ✖ `WUY05` and `2023` must exist in your data. Backtrace: Execution halted"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/troubleshoot.html","id":"duplicate-chunk-labels","dir":"Articles","previous_headings":"Common errors","what":"Duplicate chunk labels","title":"Troubleshoot","text":"One common error duplicated chunk labels, often occur copying pasting code chunks. fix issue, change one duplicated labels. two chunks labeled setup, rendering report fail error.","code":"processing file: 01_producer-report.qmd Error in parse_block(g[-1], g[1], params.src, markdown_mode) :    Duplicate chunk label 'setup', which has been used for the chunk:"},{"path":"https://wa-department-of-agriculture.github.io/soils/articles/troubleshoot.html","id":"get-help","dir":"Articles","previous_headings":"","what":"Get help","title":"Troubleshoot","text":"Quarto specific, review Shannon Pileggi’s Debugging R workshop learn strategies code troubleshooting. Copy paste error message Google another search engine. Reference Samantha Csik’s talk Teach Google. Look similar issue {soils} GitHub repo. similar issue, suggestion, please open new issue detailed description issue suggestion. preferred others may benefit public documentation. Otherwise, email jryan@agr.wa.gov.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jadey N Ryan. Maintainer, author. Molly McIlquham. Author. Kwabena Sarpong. Author. Leslie M Michel. Author. Teal S Potter. Author. Deirdre Griffin LaHue. Author. Dani L Gelardi. Author. Washington State Department Agriculture. Copyright holder, funder.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ryan JN, McIlquham M, Sarpong KA, Michel LM, Potter TS, Griffin LaHue D, Gelardi DL. 2024. Visualize Report Soil Health Survey Data {soils}. Washington Soil Health Initiative. https://github.com/WA-Department--Agriculture/soils","code":"@Article{,   title = {Visualize and Report Soil Health Survey Data with {soils}},   author = {Jadey N Ryan and Molly McIlquham and Kwabena A Sarpong and Leslie Michel and Teal Potter and Deirdre Griffin LaHue and Dani L Gelardi and Washington State Department of Agriculture},   journal = {Washington Soil Health Initiative},   year = {2024},   url = {https://github.com/WA-Department-of-Agriculture/soils}, }"},{"path":[]},{"path":"https://wa-department-of-agriculture.github.io/soils/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Visualize and Report Soil Health Data","text":"Introducing {soils}: R package soil health data visualization reporting needs. {soils} provides RStudio project template generate customized, interactive soil health reports. reports include plots tables show participant’s results compare simple averages results samples crop, county, across entire project. scientist leading soil health survey can use {soils} create custom reports survey participants. Democratize data giving back farmers land managers contributed soil samples survey project. Use reports empower participant explore better understand data. Washington State Department Agriculture Washington State University produced {soils} part Washington Soil Health Initiative.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/index.html","id":"requirements","dir":"","previous_headings":"","what":"Requirements","title":"Visualize and Report Soil Health Data","text":"report template uses Quarto, next-generation version R Markdown. assume ’re using RStudio v2022.07 later editing previewing Quarto documents. strongly recommend use latest release RStudio support Quarto features. render Microsoft Word (MS Word) documents, must MS Word installed activated. ’re new Quarto Markdown formatting syntax, first take look Primers Quarto Markdown learn ’re used {soils} get familiar features.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Visualize and Report Soil Health Data","text":"Install development version {soils} r-universe : install GitHub {pak}: Load example datasets functions :","code":"install.packages(   \"soils\",   repos = c(\"https://wa-department-of-agriculture.r-universe.dev\") ) # Uncomment the below line if {pak} is not installed. # install.packages(\"pak\") pak::pkg_install(\"WA-Department-of-Agriculture/soils\") library(soils)"},{"path":"https://wa-department-of-agriculture.github.io/soils/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Visualize and Report Soil Health Data","text":"{soils} developed work ‘box’ can immediately install render example report. However, need customize edit content fit project. recommended workflow 1) create new {soils} project, 2) try render example reports make sure everything works system, 3) customize template files use data, content, styling. provide series Primers Tutorials prepare guide workflow. See short demo videos links relevant tutorials.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/index.html","id":"id_1-create-a-new-soils-project","dir":"","previous_headings":"","what":"1. Create a new {soils} project","title":"Visualize and Report Soil Health Data","text":"Follow along Create {soils} project tutorial.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/index.html","id":"id_2-render-the-example-reports","dir":"","previous_headings":"","what":"2. Render the example reports","title":"Visualize and Report Soil Health Data","text":"Follow along Render example reports tutorial. See rendered example reports.","code":""},{"path":[]},{"path":[]},{"path":"https://wa-department-of-agriculture.github.io/soils/index.html","id":"id_3-create-reports-with-your-own-data","dir":"","previous_headings":"","what":"3. Create reports with your own data","title":"Visualize and Report Soil Health Data","text":"use data, customize reports project, render reports, follow along tutorials: Import data Customize & write Render reports","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/index.html","id":"troubleshooting","dir":"","previous_headings":"","what":"Troubleshooting","title":"Visualize and Report Soil Health Data","text":"edit content, errors bound occur. Read tips workflows troubleshooting","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/index.html","id":"acknowledgement-and-citation","dir":"","previous_headings":"","what":"Acknowledgement and citation","title":"Visualize and Report Soil Health Data","text":"acknowledgement automatically embedded report: Soil Health Report Template used generate report developed Washington State Department Agriculture Washington State University (WSU) part Washington Soil Health Initiative. Text figures adapted WSU Extension publication #FS378E Soil Health Washington Vineyards. cite {soils} publications, please use: Ryan JN, McIlquham M, Sarpong KA, Michel LM, Potter TS, Griffin LaHue D, Gelardi DL. 2024. Visualize Report Soil Health Survey Data {soils}. Washington Soil Health Initiative. https://github.com/WA-Department--Agriculture/soils","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/index.html","id":"credits","dir":"","previous_headings":"","what":"Credits","title":"Visualize and Report Soil Health Data","text":"{soils} adapts existing R project templating resources packages: RStudio Project Templates {ratlas} {quartotemplate} {golem}","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/add_texture_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Add ggplot2::geom_point() points to texture triangle — add_texture_points","title":"Add ggplot2::geom_point() points to texture triangle — add_texture_points","text":"Add ggplot2::geom_point() points texture triangle","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/add_texture_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add ggplot2::geom_point() points to texture triangle — add_texture_points","text":"","code":"add_texture_points(df, sand, silt, clay, ...)"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/add_texture_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add ggplot2::geom_point() points to texture triangle — add_texture_points","text":"df Data frame containing columns sand, silt, clay. sand, silt, clay Column names df sand, silt, clay % values. ... arguments pass ggplot2::aes().","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/add_texture_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add ggplot2::geom_point() points to texture triangle — add_texture_points","text":"ggplot2 texture triangle points samples.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/add_texture_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add ggplot2::geom_point() points to texture triangle — add_texture_points","text":"","code":"library(ggplot2) # Create a texture triangle with points colored by texture make_texture_triangle(body_font = \"sans\") +   add_texture_points(     df = washi_data,     sand = sand_percent,     silt = silt_percent,     clay = clay_percent,     color = \"#a60f2d\",     alpha = 0.6   ) +   # if you are setting a color to a constant, you must call   # scale_*_identity().   ggplot2::scale_color_identity() +   ggplot2::scale_alpha_identity() #> Registered S3 methods overwritten by 'ggtern': #>   method           from    #>   grid.draw.ggplot ggplot2 #>   plot.ggplot      ggplot2 #>   print.ggplot     ggplot2 #> Error in guides_train(scales = scales$non_position_scales(), theme = theme,     guides = guides, labels = labels): could not find function \"guides_train\"  # Remember these are `ggplot2` functions and require `+` instead of #  pipes (`|>` or `%>%`) try({   make_texture_triangle(body_font = \"sans\") +     add_texture_points(       df = washi_data,       sand = sand_percent,       silt = silt_percent,       clay = clay_percent,       color = texture     ) +     ggplot2::scale_color_viridis_d() }) #> Error in guides_train(scales = scales$non_position_scales(), theme = theme,     guides = guides, labels = labels): could not find function \"guides_train\""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/calculate_mode.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the mode of categorical variable — calculate_mode","title":"Calculate the mode of categorical variable — calculate_mode","text":"Calculate mode categorical variable","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/calculate_mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the mode of categorical variable — calculate_mode","text":"","code":"calculate_mode(x)"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/calculate_mode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the mode of categorical variable — calculate_mode","text":"x Character vector calculate mode .","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/calculate_mode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the mode of categorical variable — calculate_mode","text":"value occurred often.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/calculate_mode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the mode of categorical variable — calculate_mode","text":"","code":"calculate_mode(washi_data$crop) #> [1] \"Vegetable\""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/convert_ggiraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a ggplot2 plot to an interactive ggiraph — convert_ggiraph","title":"Convert a ggplot2 plot to an interactive ggiraph — convert_ggiraph","text":"Convert ggplot2 plot interactive ggiraph","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/convert_ggiraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a ggplot2 plot to an interactive ggiraph — convert_ggiraph","text":"","code":"convert_ggiraph(plot, ..., body_font = \"Poppins\", width = 6, height = 4)"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/convert_ggiraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a ggplot2 plot to an interactive ggiraph — convert_ggiraph","text":"plot ggplot2 plot convert interactive ggiraph. plot must contain ggiraph::geom_<plot_type>_interactive(). ... arguments pass ggiraph::girafe_options(). body_font Font family use throughout plot. Defaults \"Poppins\". width Width SVG output inches. Defaults 6. height Height SVG output inches. Defaults 4.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/convert_ggiraph.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a ggplot2 plot to an interactive ggiraph — convert_ggiraph","text":"Facetted strip plots classes girafe htmlwidget.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/convert_ggiraph.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert a ggplot2 plot to an interactive ggiraph — convert_ggiraph","text":"","code":"# Read in wrangled example plot data df_plot_path <- soils_example(\"df_plot.RDS\") df_plot <- readRDS(df_plot_path)  # Make strip plot with all measurements and set scales based on # the category column and then apply theme.  # Subset df to just biological measurement group df_plot_bio <- df_plot |>   dplyr::filter(measurement_group == \"biological\")  # NOTE: the plot gets piped into the `set_scales()` function, which gets # added to `theme_facet_strip()`. plot <- make_strip_plot(   df_plot_bio,   x = dummy,   y = value,   id = sample_id,   group = abbr_unit,   tooltip = label,   color = category,   size = category,   alpha = category,   shape = category ) |>   set_scales() +   theme_facet_strip(body_font = \"sans\")  # Convert static plot to interactive `ggiraph` convert_ggiraph(plot) #> Can't find font family `Poppins` on your system. #> ℹ Defaulting to a sans-serif font. #> ℹ See the ggiraph book (<https://www.ardata.fr/ggiraph-book/fonts.html>) for #>   help. #> Error in setup_panel_guides(..., self = self): unused argument (list(~dummy, ~value, ~category, ~category, ~category, ~category))"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/create_soils.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a project directory for generating soil health reports — create_soils","title":"Create a project directory for generating soil health reports — create_soils","text":"Creates RStudio project containing Quarto template resources (images, style sheets, render.R script).","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/create_soils.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a project directory for generating soil health reports — create_soils","text":"","code":"create_soils(path, overwrite = FALSE, open = TRUE)"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/create_soils.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Create a project directory for generating soil health reports — create_soils","text":"Adapted golem::create_golem().","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/create_soils.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a project directory for generating soil health reports — create_soils","text":"path Name project directory created. overwrite Boolean. Overwrite existing project? open Boolean. Open newly created project?","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/create_soils.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a project directory for generating soil health reports — create_soils","text":"new project directory containing template resources.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/create_soils.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a project directory for generating soil health reports — create_soils","text":"","code":"if (FALSE) { # Create temporary directory dir <- tempdir()  # Create soils project create_soils(dir, overwrite = TRUE)  # Delete temporary directory unlink(dir, recursive = TRUE) }"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/data_dictionary.html","id":null,"dir":"Reference","previous_headings":"","what":"Data dictionary — data_dictionary","title":"Data dictionary — data_dictionary","text":"example data dictionary Washington Soil Health Initiative (WaSHI) State Soils Assessment anonymized data.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/data_dictionary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data dictionary — data_dictionary","text":"","code":"data_dictionary"},{"path":[]},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/data_dictionary.html","id":"data-dictionary-a-data-frame-with-rows-and-columns-","dir":"Reference","previous_headings":"","what":"data_dictionary A data frame with 32 rows and 7 columns.","title":"Data dictionary — data_dictionary","text":"measurement_group Name group measurements measurement_group_label Label measurement group used heading column_name Name column data set, used joining order Order measurements presented within measurement_group abbr Abbreviated measurement name labels unit Measurement unit abbr_unit HTML formatted abbreviation unit plots tables","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/data_dictionary.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Data dictionary — data_dictionary","text":"WaSHI State Soils","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/format_ft_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional formatting of flextable background cell colors — format_ft_colors","title":"Conditional formatting of flextable background cell colors — format_ft_colors","text":"Color background cells based value compares project average. project average must last row table. footnote added table describing dark light colors mean.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/format_ft_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditional formatting of flextable background cell colors — format_ft_colors","text":"","code":"format_ft_colors(ft, lighter_color = \"#F2F0E6\", darker_color = \"#ccc29c\")"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/format_ft_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditional formatting of flextable background cell colors — format_ft_colors","text":"ft Flextable object lighter_color Lighter background color. Defaults WaSHI cream. darker_color Darker background color. Defaults WaSHI tan.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/format_ft_colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conditional formatting of flextable background cell colors — format_ft_colors","text":"Field Average Organic Matter Min C POXC PMN ACE Protein Field 01 4.5 36 500 67 6.7 Field 03 6.7 51 550 110 4.2 Hay/Silage Average (14 Fields) 5.5 37 500 92 7.8 Pasture, Seeded Average (16 Fields) 5.5 58 520 140 7.3 County 9 Average (5 Fields) 4.7 50 490 79 5.3 Project Average (100 Fields) 5.8 50 530 99 8.5 Field Average Organic Matter Min C POXC PMN ACE Protein Field 01 4.5 36 500 67 6.7 Field 03 6.7 51 550 110 4.2 Hay/Silage Average (14 Fields) 5.5 37 500 92 7.8 Pasture, Seeded Average (16 Fields) 5.5 58 520 140 7.3 County 9 Average (5 Fields) 4.7 50 490 79 5.3 Project Average (100 Fields) 5.8 50 530 99 8.5 Values ≥ project average darker backgrounds. Values < project average lighter backgrounds.","code":"# Read in wrangled example table data tables_path <- soils_example(\"tables.RDS\") tables <- readRDS(tables_path)  # Make the table ft <- flextable::flextable(tables$biological) ft .cl-30d072b2{}.cl-30c92732{font-family:'DejaVu Sans';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-30cbd4f0{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-30cbd4fa{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-30cbeb52{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-30cbeb5c{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-30cbeb66{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-30cbeb67{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-30cbeb68{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-30cbeb70{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}Field or AverageOrganic MatterMin CPOXCPMNACE ProteinField 014.536500676.7Field 036.7515501104.2Hay/Silage Average (14 Fields)5.537500927.8Pasture, Seeded Average (16 Fields)5.5585201407.3County 9 Average (5 Fields)4.750490795.3Project Average (100 Fields)5.850530998.5 # Conditionally format background cell colors format_ft_colors(ft) .cl-30df8b26{}.cl-30d9bfe8{font-family:'DejaVu Sans';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-30d9bff2{font-family:'DejaVu Sans';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:rgba(204, 194, 156, 1.00);}.cl-30d9bffc{font-family:'DejaVu Sans';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:rgba(242, 240, 230, 1.00);}.cl-30dc1342{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-30dc134c{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-30dc2670{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-30dc2671{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-30dc267a{width:0.75in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-30dc267b{width:0.75in;background-color:rgba(242, 240, 230, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-30dc2684{width:0.75in;background-color:rgba(204, 194, 156, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-30dc2685{width:0.75in;background-color:rgba(255, 255, 255, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-30dc2686{width:0.75in;background-color:rgba(204, 194, 156, 1.00);vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-30dc2687{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(255, 255, 255, 0.00);border-top: 0 solid rgba(255, 255, 255, 0.00);border-left: 0 solid rgba(255, 255, 255, 0.00);border-right: 0 solid rgba(255, 255, 255, 0.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}Field or AverageOrganic MatterMin CPOXCPMNACE ProteinField 014.536500676.7Field 036.7515501104.2Hay/Silage Average (14 Fields)5.537500927.8Pasture, Seeded Average (16 Fields)5.5585201407.3County 9 Average (5 Fields)4.750490795.3Project Average (100 Fields)5.850530998.5Values ≥ project average have darker backgrounds. Values < project average have lighter backgrounds."},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/get_n_texture_by_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate n samples and most frequent texture by a grouping variable — get_n_texture_by_var","title":"Calculate n samples and most frequent texture by a grouping variable — get_n_texture_by_var","text":"function used summarize_by_var.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/get_n_texture_by_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate n samples and most frequent texture by a grouping variable — get_n_texture_by_var","text":"","code":"get_n_texture_by_var(results_long, producer_info, var)"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/get_n_texture_by_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate n samples and most frequent texture by a grouping variable — get_n_texture_by_var","text":"results_long Dataframe tidy, long format columns: sample_id, texture. producer_info Vector producer's values grouping variable. var Variable group summarize .","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/get_table_headers.html","id":null,"dir":"Reference","previous_headings":"","what":"Get table headers for flextable — get_table_headers","title":"Get table headers for flextable — get_table_headers","text":"function uses data dictionary create new dataframe abbreviations units measurement group flextable","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/get_table_headers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get table headers for flextable — get_table_headers","text":"","code":"get_table_headers(dictionary, group)"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/get_table_headers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get table headers for flextable — get_table_headers","text":"dictionary Dataframe containing columns measurement_group, abbr, unit. group Character measurement_group value.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_ft.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a flextable with column names from another dataframe — make_ft","title":"Make a flextable with column names from another dataframe — make_ft","text":"Make flextable column names another dataframe","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_ft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a flextable with column names from another dataframe — make_ft","text":"","code":"make_ft(table, header)"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_ft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a flextable with column names from another dataframe — make_ft","text":"table dataframe contents desired flextable output. header Another dataframe three columns: First column contains top header row . template, abbreviation measurement (.e. Organic Matter). Second column, called \"key\", contains join key. template, first column. Third column contains second header row. template, unit (.e. %).","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_ft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a flextable with column names from another dataframe — make_ft","text":"Formatted flextable object.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_ft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a flextable with column names from another dataframe — make_ft","text":"Field Average pH EC CEC Total C TOC Inorganic C  mmhos/cm cmolc/kg % Field 01 6.7 0.42 7.8 1.8 1.8  Field 03 7.6 0.60 10.0 1.6 1.5 0.12 Hay/Silage Average (14 Fields) 6.1 0.43 15.0 2.4 2.4  Pasture, Seeded Average (16 Fields) 6.2 0.33 14.0 2.7 2.7 0.11 County 9 Average (5 Fields) 7.1 0.48 8.7 1.7 1.6 0.11 Project Average (100 Fields) 6.1 0.74 15.0 2.9 2.9 0.19","code":"# Read in wrangled table data headers_path <- soils_example(\"headers.RDS\") headers <- readRDS(headers_path)  tables_path <- soils_example(\"tables.RDS\") tables <- readRDS(tables_path)  # Input dataframes headers$chemical #>               abbr              key     unit #> 1               pH               pH          #> 2               EC               EC mmhos/cm #> 3              CEC              CEC cmolc/kg #> 4          Total C          Total C        % #> 5              TOC              TOC        % #> 6      Inorganic C      Inorganic C        % #> 7 Field or Average Field or Average           tables$chemical #> # A tibble: 6 × 7 #>   `Field or Average`                pH    EC   CEC `Total C`   TOC `Inorganic C` #>   <glue>                         <dbl> <dbl> <dbl>     <dbl> <dbl>         <dbl> #> 1 Field 01                         6.7  0.42   7.8       1.8   1.8         NA    #> 2 Field 03                         7.6  0.6   10         1.6   1.5          0.12 #> 3 Hay/Silage Average  #> (14 Fields)   6.1  0.43  15         2.4   2.4         NA    #> 4 Pasture, Seeded Average  #> (16 F…   6.2  0.33  14         2.7   2.7          0.11 #> 5 County 9 Average  #> (5 Fields)      7.1  0.48   8.7       1.7   1.6          0.11 #> 6 Project Average  #> (100 Fields)     6.1  0.74  15         2.9   2.9          0.19  # Make the flextable make_ft(   table = tables$chemical,   header = headers$chemical ) |>   # Style the flextable   style_ft() |>   # Add the white line under the columns with the same units   unit_hline(header = headers$chemical) .cl-3182d984{}.cl-317d07f2{font-family:'Lato';font-size:11pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(255, 255, 255, 1.00);background-color:transparent;}.cl-317d07fc{font-family:'Poppins';font-size:10pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-317d07fd{font-family:'Poppins';font-size:10pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-317f6a10{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1.3;background-color:transparent;}.cl-317f6a1a{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1.3;background-color:transparent;}.cl-317f6a1b{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1.3;background-color:transparent;}.cl-317f7d34{width:0.75in;background-color:rgba(2, 59, 44, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-317f7d35{width:0.75in;background-color:rgba(2, 59, 44, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(255, 255, 255, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-317f7d3e{width:0.75in;background-color:rgba(2, 59, 44, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(255, 255, 255, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-317f7d3f{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(62, 61, 61, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-317f7d40{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(62, 61, 61, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-317f7d48{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(62, 61, 61, 1.00);border-top: 1pt solid rgba(62, 61, 61, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-317f7d49{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(62, 61, 61, 1.00);border-top: 1pt solid rgba(62, 61, 61, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}Field or AveragepHECCECTotal CTOCInorganic Cmmhos/cmcmolc/kg%Field 016.70.427.81.81.8Field 037.60.6010.01.61.50.12Hay/Silage Average (14 Fields)6.10.4315.02.42.4Pasture, Seeded Average (16 Fields)6.20.3314.02.72.70.11County 9 Average (5 Fields)7.10.488.71.71.60.11Project Average (100 Fields)6.10.7415.02.92.90.19"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_leaflet.html","id":null,"dir":"Reference","previous_headings":"","what":"Make leaflet map — make_leaflet","title":"Make leaflet map — make_leaflet","text":"Make leaflet map","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_leaflet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make leaflet map — make_leaflet","text":"","code":"make_leaflet(df, primary_color = \"#a60f2d\")"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_leaflet.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Make leaflet map — make_leaflet","text":"JavaScript code adapted leaflet.extras.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_leaflet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make leaflet map — make_leaflet","text":"df Dataframe containing columns: longitude, latitude, label, popup. See prep_for_map() details. primary_color Color points. Defaults WaSHI red.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_leaflet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make leaflet map — make_leaflet","text":"Leaflet map.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_leaflet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make leaflet map — make_leaflet","text":"","code":"gis_df <- washi_data |>   dplyr::distinct(latitude, longitude, .keep_all = TRUE) |>   head(3) |>   prep_for_map(label_heading = field_name, label_body = crop)  dplyr::glimpse(gis_df) #> Rows: 3 #> Columns: 44 #> $ year                   <dbl> 2023, 2022, 2022 #> $ sample_id              <chr> \"23-WUY05-01\", \"22-RHM05-02\", \"22-ENR07-02\" #> $ farm_name              <chr> \"Farm 150\", \"Farm 085\", \"Farm 058\" #> $ producer_id            <chr> \"WUY05\", \"RHM05\", \"ENR07\" #> $ field_name             <chr> \"Field 01\", \"Field 02\", \"Field 02\" #> $ field_id               <dbl> 1, 2, 2 #> $ county                 <chr> \"County 9\", \"County 18\", \"County 11\" #> $ crop                   <chr> \"Hay/Silage\", \"Green Manure\", \"Vegetable\" #> $ longitude              <dbl> -119, -123, -122 #> $ latitude               <dbl> 49, 47, 47 #> $ texture                <chr> \"Loamy Sand\", \"Sandy Loam\", \"Silt Loam\" #> $ bd_g_cm3               <dbl> 1.30, 0.88, 1.21 #> $ pmn_lb_ac              <dbl> 67.13, 129.97, 122.17 #> $ nh4_n_mg_kg            <dbl> 1.6, 21.6, 8.1 #> $ no3_n_mg_kg            <dbl> 9.2, 6.1, 25.3 #> $ poxc_mg_kg             <dbl> 496, 571, 419 #> $ ph                     <dbl> 6.7, 5.9, 6.3 #> $ ec_mmhos_cm            <dbl> 0.42, 0.05, 0.60 #> $ k_mg_kg                <dbl> 498, 198, 294 #> $ ca_mg_kg               <dbl> 1380, 780, 1760 #> $ mg_mg_kg               <dbl> 145.2, 96.8, 266.2 #> $ na_mg_kg               <dbl> 16.1, 20.7, 20.7 #> $ cec_meq_100g           <dbl> 7.8, 10.5, 13.0 #> $ b_mg_kg                <dbl> 0.22, 0.09, 0.41 #> $ cu_mg_kg               <dbl> 0.6, 0.4, 4.2 #> $ fe_mg_kg               <dbl> 26, 28, 141 #> $ mn_mg_kg               <dbl> 1.5, 2.7, 4.1 #> $ s_mg_kg                <dbl> 4.29, 9.41, 26.73 #> $ zn_mg_kg               <dbl> 1.7, 0.8, 4.2 #> $ total_c_percent        <dbl> 1.85, 2.88, 1.68 #> $ total_n_percent        <dbl> 0.16, 0.18, 0.14 #> $ ace_g_protein_kg_soil  <dbl> 6.74, 21.50, 10.90 #> $ sand_percent           <dbl> 44, 69, 11 #> $ silt_percent           <dbl> 23, 21, 79 #> $ clay_percent           <dbl> 3, 10, 10 #> $ min_c_96hr_mg_c_kg_day <dbl> 35.6, 30.0, 15.0 #> $ p_olsen_mg_kg          <dbl> 15, 37, 73 #> $ wsa_percent            <dbl> 88.5, 92.6, 91.3 #> $ om_percent             <dbl> 4.5, 5.8, 2.4 #> $ toc_percent            <dbl> 1.85, 2.88, 1.68 #> $ whc_in_ft              <dbl> 1.01, 1.08, 2.77 #> $ inorganic_c_percent    <dbl> NA, NA, NA #> $ label                  <glue> \"<strong>Field 01<\/strong>\", \"<strong>Field 02<… #> $ popup                  <glue> \"<strong>Field 01<\/strong><br>Hay/Silage\", \"<st…  # Make leaflet make_leaflet(gis_df)  {\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}}},\"calls\":[{\"method\":\"addTiles\",\"args\":[\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\",null,\"Satellite\",{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false}]},{\"method\":\"addTiles\",\"args\":[\"https://server.arcgisonline.com/ArcGIS/rest/services//World_Topo_Map/MapServer/tile/{z}/{y}/{x}\",null,\"Topographic\",{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false}]},{\"method\":\"addCircleMarkers\",\"args\":[[49,47,47],[-119,-123,-122],10,null,null,{\"interactive\":true,\"draggable\":false,\"keyboard\":true,\"title\":\"\",\"alt\":\"\",\"zIndexOffset\":0,\"opacity\":1,\"riseOnHover\":true,\"riseOffset\":250,\"stroke\":false,\"color\":\"#a60f2d\",\"weight\":5,\"opacity.1\":0.5,\"fill\":true,\"fillColor\":\"#a60f2d\",\"fillOpacity\":0.7},null,null,[\"<strong>Field 01<\\/strong><br>Hay/Silage\",\"<strong>Field 02<\\/strong><br>Green Manure\",\"<strong>Field 02<\\/strong><br>Vegetable\"],{\"maxWidth\":300,\"minWidth\":50,\"autoPan\":true,\"keepInView\":false,\"closeButton\":true,\"closeOnClick\":true,\"className\":\"\"},[\"<strong>Field 01<\\/strong>\",\"<strong>Field 02<\\/strong>\",\"<strong>Field 02<\\/strong>\"],{\"interactive\":false,\"permanent\":true,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"style\":{\"font-size\":\"15px\"},\"className\":\"\",\"sticky\":true},null]},{\"method\":\"addLayersControl\",\"args\":[[\"Satellite\",\"Topographic\"],[],{\"collapsed\":false,\"autoZIndex\":true,\"position\":\"topright\"}]},{\"method\":\"addEasyButton\",\"args\":[{\"icon\":\"ion-arrow-shrink\",\"title\":\"Reset view\",\"onClick\":\"function(btn, map){ map.setView(map._initialCenter, map._initialZoom); }\",\"position\":\"topleft\"}]}],\"limits\":{\"lat\":[47,49],\"lng\":[-123,-119]}},\"evals\":[\"calls.4.args.0.onClick\"],\"jsHooks\":{\"render\":[{\"code\":\"function(el, x, data) {\\n  return (\\nfunction(el, x){\\n  var map = this;\\n  map.whenReady(function(){\\n    map._initialCenter = map.getCenter();\\n    map._initialZoom = map.getZoom();\\n  });\\n}).call(this.getMap(), el, x, data);\\n}\",\"data\":null}]}}"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_strip_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a facetted strip plot — make_strip_plot","title":"Make a facetted strip plot — make_strip_plot","text":"Make facetted strip plot","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_strip_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a facetted strip plot — make_strip_plot","text":"","code":"make_strip_plot(   df,   ...,   x = dummy,   y = value,   id = sample_id,   group = abbr_unit,   tooltip = label )"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_strip_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a facetted strip plot — make_strip_plot","text":"df Data frame plot. ... arguments pass ggplot2::aes(). x Column x-axis. strip plots, recommend using dummy variable act placeholder. Defaults column named dummy one value (\"dummy\") rows. y Column y-axis. Defaults value. id Column unique identifiers sample use data_id interactive plots. Defaults sample_id. group Column facet . Defaults abbr_unit. tooltip Column tooltip labels interactive plots.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_strip_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a facetted strip plot — make_strip_plot","text":"Facetted ggplot2 strip plots.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_strip_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a facetted strip plot — make_strip_plot","text":"","code":"# Read in wrangled example plot data df_plot_path <- soils_example(\"df_plot.RDS\") df_plot <- readRDS(df_plot_path)  # Subset df to just biological measurement group df_plot_bio <- df_plot |>   dplyr::filter(measurement_group == \"biological\")  # Make strip plot with all measurements and set scales based on # the category column and then apply theme.  # NOTE: the plot gets piped into the `set_scales()` function, which gets # added to `theme_facet_strip()`.  make_strip_plot(   df_plot_bio,   x = dummy,   y = value,   id = sample_id,   group = abbr_unit,   tooltip = label,   color = category,   size = category,   alpha = category,   shape = category ) |>   set_scales() +   theme_facet_strip(body_font = \"sans\") #> Error in setup_panel_guides(..., self = self): unused argument (list(~dummy, ~value, ~category, ~category, ~category, ~category))  # Example of strip plot without scales or theme functions make_strip_plot(df_plot_bio) #> Error in setup_panel_guides(..., self = self): unused argument (list(~dummy, ~value))  # Example of strip plot with `x` set to the facet group instead of a # dummy variable. make_strip_plot(df_plot_bio, x = abbr_unit) |>   set_scales() +   theme_facet_strip(body_font = \"sans\") #> Error in setup_panel_guides(..., self = self): unused argument (list(~abbr_unit, ~value))"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_texture_triangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a texture triangle — make_texture_triangle","title":"Make a texture triangle — make_texture_triangle","text":"Make texture triangle","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_texture_triangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a texture triangle — make_texture_triangle","text":"","code":"make_texture_triangle(body_font = \"Poppins\")"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_texture_triangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a texture triangle — make_texture_triangle","text":"body_font Font family use throughout plot. Defaults \"Poppins\".","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_texture_triangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a texture triangle — make_texture_triangle","text":"Blank ggplot2 texture triangle USDA textural classes.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/make_texture_triangle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make a texture triangle — make_texture_triangle","text":"","code":"# Blank texture triangle with just USDA classes make_texture_triangle(body_font = \"sans\") #> Error in guides_train(scales = scales$non_position_scales(), theme = theme,     guides = guides, labels = labels): could not find function \"guides_train\""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/prep_for_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Prep data to gis df — prep_for_map","title":"Prep data to gis df — prep_for_map","text":"Prep data gis df","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/prep_for_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prep data to gis df — prep_for_map","text":"","code":"prep_for_map(df, label_heading, label_body)"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/prep_for_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prep data to gis df — prep_for_map","text":"df Dataframe containing columns: longitude, latitude, two columns values want appear map label popup. label_heading Column df want appear bold point label map, well first line popup user clicks point. label_body Column df want appear body text label_heading popup.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/prep_for_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prep data to gis df — prep_for_map","text":"Dataframe input make_leaflet().","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/prep_for_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prep data to gis df — prep_for_map","text":"","code":"washi_data |>   dplyr::distinct(latitude, longitude, .keep_all = TRUE) |>   head(3) |>   prep_for_map(label_heading = field_name, label_body = crop) |>   dplyr::glimpse() #> Rows: 3 #> Columns: 44 #> $ year                   <dbl> 2023, 2022, 2022 #> $ sample_id              <chr> \"23-WUY05-01\", \"22-RHM05-02\", \"22-ENR07-02\" #> $ farm_name              <chr> \"Farm 150\", \"Farm 085\", \"Farm 058\" #> $ producer_id            <chr> \"WUY05\", \"RHM05\", \"ENR07\" #> $ field_name             <chr> \"Field 01\", \"Field 02\", \"Field 02\" #> $ field_id               <dbl> 1, 2, 2 #> $ county                 <chr> \"County 9\", \"County 18\", \"County 11\" #> $ crop                   <chr> \"Hay/Silage\", \"Green Manure\", \"Vegetable\" #> $ longitude              <dbl> -119, -123, -122 #> $ latitude               <dbl> 49, 47, 47 #> $ texture                <chr> \"Loamy Sand\", \"Sandy Loam\", \"Silt Loam\" #> $ bd_g_cm3               <dbl> 1.30, 0.88, 1.21 #> $ pmn_lb_ac              <dbl> 67.13, 129.97, 122.17 #> $ nh4_n_mg_kg            <dbl> 1.6, 21.6, 8.1 #> $ no3_n_mg_kg            <dbl> 9.2, 6.1, 25.3 #> $ poxc_mg_kg             <dbl> 496, 571, 419 #> $ ph                     <dbl> 6.7, 5.9, 6.3 #> $ ec_mmhos_cm            <dbl> 0.42, 0.05, 0.60 #> $ k_mg_kg                <dbl> 498, 198, 294 #> $ ca_mg_kg               <dbl> 1380, 780, 1760 #> $ mg_mg_kg               <dbl> 145.2, 96.8, 266.2 #> $ na_mg_kg               <dbl> 16.1, 20.7, 20.7 #> $ cec_meq_100g           <dbl> 7.8, 10.5, 13.0 #> $ b_mg_kg                <dbl> 0.22, 0.09, 0.41 #> $ cu_mg_kg               <dbl> 0.6, 0.4, 4.2 #> $ fe_mg_kg               <dbl> 26, 28, 141 #> $ mn_mg_kg               <dbl> 1.5, 2.7, 4.1 #> $ s_mg_kg                <dbl> 4.29, 9.41, 26.73 #> $ zn_mg_kg               <dbl> 1.7, 0.8, 4.2 #> $ total_c_percent        <dbl> 1.85, 2.88, 1.68 #> $ total_n_percent        <dbl> 0.16, 0.18, 0.14 #> $ ace_g_protein_kg_soil  <dbl> 6.74, 21.50, 10.90 #> $ sand_percent           <dbl> 44, 69, 11 #> $ silt_percent           <dbl> 23, 21, 79 #> $ clay_percent           <dbl> 3, 10, 10 #> $ min_c_96hr_mg_c_kg_day <dbl> 35.6, 30.0, 15.0 #> $ p_olsen_mg_kg          <dbl> 15, 37, 73 #> $ wsa_percent            <dbl> 88.5, 92.6, 91.3 #> $ om_percent             <dbl> 4.5, 5.8, 2.4 #> $ toc_percent            <dbl> 1.85, 2.88, 1.68 #> $ whc_in_ft              <dbl> 1.01, 1.08, 2.77 #> $ inorganic_c_percent    <dbl> NA, NA, NA #> $ label                  <glue> \"<strong>Field 01<\/strong>\", \"<strong>Field 02<… #> $ popup                  <glue> \"<strong>Field 01<\/strong><br>Hay/Silage\", \"<st…"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/pull_unique.html","id":null,"dir":"Reference","previous_headings":"","what":"Pull unique values from one column of dataframe — pull_unique","title":"Pull unique values from one column of dataframe — pull_unique","text":"Pull unique values one column dataframe","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/pull_unique.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pull unique values from one column of dataframe — pull_unique","text":"","code":"pull_unique(df, target)"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/pull_unique.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pull unique values from one column of dataframe — pull_unique","text":"df Dataframe column extract unique values . target Variable pull unique vector (.e. crop county).","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/pull_unique.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pull unique values from one column of dataframe — pull_unique","text":"Vector unique values target column.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/pull_unique.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pull unique values from one column of dataframe — pull_unique","text":"","code":"washi_data |>   pull_unique(crop) #>  [1] \"Hay/Silage\"       \"Green Manure\"     \"Vegetable\"        \"Herb\"             #>  [5] \"Pasture, Seeded\"  \"Cereal Grain\"     \"Native Land\"      \"Forest\"           #>  [9] \"Commercial Tree\"  \"Berry\"            \"Orchard\"          \"Fallow\"           #> [13] \"CRP/Conservation\" \"Seed\"             \"Oilseed\""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/set_scales.html","id":null,"dir":"Reference","previous_headings":"","what":"Define styles for producer's samples versus all samples — set_scales","title":"Define styles for producer's samples versus all samples — set_scales","text":"Define styles producer's samples versus samples","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/set_scales.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define styles for producer's samples versus all samples — set_scales","text":"","code":"set_scales(   plot,   primary_color = \"#a60f2d\",   secondary_color = \"#3E3D3D\",   other_color = \"#ccc29c\" )"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/set_scales.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define styles for producer's samples versus all samples — set_scales","text":"plot ggplot object apply scales . primary_color Color producer's sample points. Defaults WaSHI green. secondary_color Color sample points \"crop\" \"county\" values category column. Defaults WaSHI gray. other_color Color sample points \"fields\" value category column. Defaults WaSHI tan.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/set_scales.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define styles for producer's samples versus all samples — set_scales","text":"ggplot object manual alpha, color, shape, size scales applied.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/set_scales.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define styles for producer's samples versus all samples — set_scales","text":"","code":"# Read in wrangled example plot data df_plot_path <- soils_example(\"df_plot.RDS\") df_plot <- readRDS(df_plot_path) # Subset df to just biological measurement group df_plot_bio <- df_plot |>   dplyr::filter(measurement_group == \"biological\")  # Make strip plot  make_strip_plot(   df_plot_bio,   x = dummy,   y = value,   id = sample_id,   group = abbr_unit,   tooltip = label,   color = category,   size = category,   alpha = category,   shape = category ) |>   set_scales() +   theme_facet_strip(body_font = \"sans\") #> Error in setup_panel_guides(..., self = self): unused argument (list(~dummy, ~value, ~category, ~category, ~category, ~category))  # Example without setting scales make_strip_plot(   df_plot_bio,   x = dummy,   y = value,   id = sample_id,   group = abbr_unit,   tooltip = label ) +   theme_facet_strip(body_font = \"sans\") #> Error in setup_panel_guides(..., self = self): unused argument (list(~dummy, ~value))"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/soils-package.html","id":null,"dir":"Reference","previous_headings":"","what":"soils: Visualize and Report Soil Health Data — soils-package","title":"soils: Visualize and Report Soil Health Data — soils-package","text":"Collection soil health data visualization reporting tools, including RStudio project template everything need generate custom HTML Microsoft Word reports participant soil health survey.","code":""},{"path":[]},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/soils-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"soils: Visualize and Report Soil Health Data — soils-package","text":"Maintainer: Jadey N Ryan jryan@agr.wa.gov (ORCID) Authors: Molly McIlquham (ORCID) Kwabena Sarpong Leslie M Michel Teal S Potter (ORCID) Deirdre Griffin LaHue (ORCID) Dani L Gelardi (ORCID) contributors: Washington State Department Agriculture [copyright holder, funder]","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/soils_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Get path to example data — soils_example","title":"Get path to example data — soils_example","text":"soils comes bundled example files inst/extdata directory. function make easy access.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/soils_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get path to example data — soils_example","text":"","code":"soils_example(file = NULL)"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/soils_example.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Get path to example data — soils_example","text":"Adapted readxl::readxl_example().","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/soils_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get path to example data — soils_example","text":"file Name file. NULL, example files listed.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/soils_example.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get path to example data — soils_example","text":"","code":"soils_example() #> [1] \"df_plot.RDS\" \"headers.RDS\" \"tables.RDS\"   soils_example(\"df_plot.RDS\") #> [1] \"/home/runner/work/_temp/Library/soils/extdata/df_plot.RDS\""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/style_ft.html","id":null,"dir":"Reference","previous_headings":"","what":"Style a flextable — style_ft","title":"Style a flextable — style_ft","text":"Style flextable","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/style_ft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Style a flextable — style_ft","text":"","code":"style_ft(   ft,   header_font = \"Lato\",   body_font = \"Poppins\",   header_color = \"#023B2C\",   header_text_color = \"white\",   border_color = \"#3E3D3D\" )"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/style_ft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Style a flextable — style_ft","text":"ft Flextable object. header_font Font header text. Defaults \"Lato\". body_font Font body text. Defaults \"Poppins\". header_color Background color header cells. Defaults WaSHI green. header_text_color Color header text. Defaults white. border_color Color border lines. Defaults WaSHI gray.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/style_ft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Style a flextable — style_ft","text":"Styled flextable object.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/style_ft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Style a flextable — style_ft","text":"Field Average Organic Matter Min C POXC PMN ACE Protein Field 01 4.5 36 500 67 6.7 Field 03 6.7 51 550 110 4.2 Hay/Silage Average (14 Fields) 5.5 37 500 92 7.8 Pasture, Seeded Average (16 Fields) 5.5 58 520 140 7.3 County 9 Average (5 Fields) 4.7 50 490 79 5.3 Project Average (100 Fields) 5.8 50 530 99 8.5 Field Average Organic Matter Min C POXC PMN ACE Protein Field 01 4.5 36 500 67 6.7 Field 03 6.7 51 550 110 4.2 Hay/Silage Average (14 Fields) 5.5 37 500 92 7.8 Pasture, Seeded Average (16 Fields) 5.5 58 520 140 7.3 County 9 Average (5 Fields) 4.7 50 490 79 5.3 Project Average (100 Fields) 5.8 50 530 99 8.5","code":"# Read in wrangled example table data tables_path <- soils_example(\"tables.RDS\") tables <- readRDS(tables_path)  # Make the table ft <- flextable::flextable(tables$biological) ft .cl-3350138a{}.cl-334a625a{font-family:'Poppins';font-size:10pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-334cb546{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-334cb550{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1;background-color:transparent;}.cl-334cc84c{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-334cc856{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 1.5pt solid rgba(102, 102, 102, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-334cc860{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-334cc861{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-334cc862{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-334cc86a{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1.5pt solid rgba(102, 102, 102, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}Field or AverageOrganic MatterMin CPOXCPMNACE ProteinField 014.536500676.7Field 036.7515501104.2Hay/Silage Average (14 Fields)5.537500927.8Pasture, Seeded Average (16 Fields)5.5585201407.3County 9 Average (5 Fields)4.750490795.3Project Average (100 Fields)5.850530998.5 # Style the table style_ft(ft) .cl-335a005c{}.cl-3354abe8{font-family:'Lato';font-size:11pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(255, 255, 255, 1.00);background-color:transparent;}.cl-3354abf2{font-family:'Poppins';font-size:10pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-3354abfc{font-family:'Poppins';font-size:10pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-3356e37c{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1.3;background-color:transparent;}.cl-3356e386{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1.3;background-color:transparent;}.cl-3356e390{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1.3;background-color:transparent;}.cl-3356f452{width:0.75in;background-color:rgba(2, 59, 44, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-3356f45c{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(62, 61, 61, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-3356f45d{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(62, 61, 61, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-3356f466{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(62, 61, 61, 1.00);border-top: 1pt solid rgba(62, 61, 61, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-3356f467{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(62, 61, 61, 1.00);border-top: 1pt solid rgba(62, 61, 61, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}Field or AverageOrganic MatterMin CPOXCPMNACE ProteinField 014.536500676.7Field 036.7515501104.2Hay/Silage Average (14 Fields)5.537500927.8Pasture, Seeded Average (16 Fields)5.5585201407.3County 9 Average (5 Fields)4.750490795.3Project Average (100 Fields)5.850530998.5"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/summarize_by_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize samples across the project — summarize_by_project","title":"Summarize samples across the project — summarize_by_project","text":"Summarize samples across project","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/summarize_by_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize samples across the project — summarize_by_project","text":"","code":"summarize_by_project(results_long)"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/summarize_by_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize samples across the project — summarize_by_project","text":"results_long Dataframe tidy, long format columns: sample_id, texture, measurement_group, abbr, value.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/summarize_by_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize producer's samples with averages by grouping variable — summarize_by_var","title":"Summarize producer's samples with averages by grouping variable — summarize_by_var","text":"Summarize producer's samples averages grouping variable","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/summarize_by_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize producer's samples with averages by grouping variable — summarize_by_var","text":"","code":"summarize_by_var(results_long, producer_samples, var)"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/summarize_by_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize producer's samples with averages by grouping variable — summarize_by_var","text":"results_long Dataframe tidy, long format columns: sample_id, texture, measurement_group, abbr, value. producer_samples Dataframe tidy, long format columns: measurement_group, abbr, value. var Variable summarize .","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/theme_facet_strip.html","id":null,"dir":"Reference","previous_headings":"","what":"Theme for facetted strip plots — theme_facet_strip","title":"Theme for facetted strip plots — theme_facet_strip","text":"Theme facetted strip plots","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/theme_facet_strip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theme for facetted strip plots — theme_facet_strip","text":"","code":"theme_facet_strip(   ...,   body_font = \"Poppins\",   strip_color = \"#335c67\",   strip_text_color = \"white\" )"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/theme_facet_strip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theme for facetted strip plots — theme_facet_strip","text":"... arguments pass ggplot2::theme(). body_font Font family use throughout plot. Defaults \"Poppins\". strip_color Color facet strip background. Defaults WaSHI blue. strip_text_color Color facet strip text. Defaults white.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/theme_facet_strip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Theme for facetted strip plots — theme_facet_strip","text":"","code":"# Read in wrangled example plot data df_plot_path <- soils_example(\"df_plot.RDS\") df_plot <- readRDS(df_plot_path)  # Subset df to just biological measurement group df_plot_bio <- df_plot |>   dplyr::filter(measurement_group == \"biological\")  # Make strip plot with all measurements and set scales based on # the category column and then apply theme.  # NOTE: the plot gets piped into the `set_scales()` function, which gets # added to `theme_facet_strip()`.  make_strip_plot(   df_plot_bio,   x = dummy,   y = value,   id = sample_id,   group = abbr_unit,   tooltip = label,   color = category,   size = category,   alpha = category,   shape = category ) |>   set_scales() +   theme_facet_strip(body_font = \"sans\") #> Error in setup_panel_guides(..., self = self): unused argument (list(~dummy, ~value, ~category, ~category, ~category, ~category))  # Example without setting theme make_strip_plot(   df_plot_bio,   x = dummy,   y = value,   id = sample_id,   group = abbr_unit,   tooltip = label,   color = category,   size = category,   alpha = category,   shape = category ) |>   set_scales() #> Error in setup_panel_guides(..., self = self): unused argument (list(~dummy, ~value, ~category, ~category, ~category, ~category))"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/unit_hline.html","id":null,"dir":"Reference","previous_headings":"","what":"Add bottom border to specific columns in flextable — unit_hline","title":"Add bottom border to specific columns in flextable — unit_hline","text":"Use columns units merged together add bottom border make obvious columns share units.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/unit_hline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add bottom border to specific columns in flextable — unit_hline","text":"","code":"unit_hline(ft, header)"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/unit_hline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add bottom border to specific columns in flextable — unit_hline","text":"ft flextable object header Another dataframe three columns: First column contains top header row . template, abbreviation measurement (.e. Organic Matter). Second column, called \"key\", contains join key. template, first column. Third column contains second header row. template, unit (.e. %).","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/unit_hline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add bottom border to specific columns in flextable — unit_hline","text":"Flextable object bottom borders added.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/unit_hline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add bottom border to specific columns in flextable — unit_hline","text":"Field Average pH EC CEC Total C TOC Inorganic C  mmhos/cm cmolc/kg % Field 01 6.7 0.42 7.8 1.8 1.8  Field 03 7.6 0.60 10.0 1.6 1.5 0.12 Hay/Silage Average (14 Fields) 6.1 0.43 15.0 2.4 2.4  Pasture, Seeded Average (16 Fields) 6.2 0.33 14.0 2.7 2.7 0.11 County 9 Average (5 Fields) 7.1 0.48 8.7 1.7 1.6 0.11 Project Average (100 Fields) 6.1 0.74 15.0 2.9 2.9 0.19 Field Average pH EC CEC Total C TOC Inorganic C   mmhos/cm cmolc/kg % % % Field 01 6.7 0.42 7.8 1.8 1.8  Field 03 7.6 0.60 10.0 1.6 1.5 0.12 Hay/Silage Average (14 Fields) 6.1 0.43 15.0 2.4 2.4  Pasture, Seeded Average (16 Fields) 6.2 0.33 14.0 2.7 2.7 0.11 County 9 Average (5 Fields) 7.1 0.48 8.7 1.7 1.6 0.11 Project Average (100 Fields) 6.1 0.74 15.0 2.9 2.9 0.19","code":"# Read in wrangled table data headers_path <- soils_example(\"headers.RDS\") headers <- readRDS(headers_path)  tables_path <- soils_example(\"tables.RDS\") tables <- readRDS(tables_path)  # Input dataframes headers$chemical #>               abbr              key     unit #> 1               pH               pH          #> 2               EC               EC mmhos/cm #> 3              CEC              CEC cmolc/kg #> 4          Total C          Total C        % #> 5              TOC              TOC        % #> 6      Inorganic C      Inorganic C        % #> 7 Field or Average Field or Average           tables$chemical #> # A tibble: 6 × 7 #>   `Field or Average`                pH    EC   CEC `Total C`   TOC `Inorganic C` #>   <glue>                         <dbl> <dbl> <dbl>     <dbl> <dbl>         <dbl> #> 1 Field 01                         6.7  0.42   7.8       1.8   1.8         NA    #> 2 Field 03                         7.6  0.6   10         1.6   1.5          0.12 #> 3 Hay/Silage Average  #> (14 Fields)   6.1  0.43  15         2.4   2.4         NA    #> 4 Pasture, Seeded Average  #> (16 F…   6.2  0.33  14         2.7   2.7          0.11 #> 5 County 9 Average  #> (5 Fields)      7.1  0.48   8.7       1.7   1.6          0.11 #> 6 Project Average  #> (100 Fields)     6.1  0.74  15         2.9   2.9          0.19  # Make the flextable make_ft(   table = tables$chemical,   header = headers$chemical ) |>   # Style the flextable   style_ft() |>   # Add the white line under the columns with the same units   unit_hline(header = headers$chemical) .cl-340b64f0{}.cl-3405df62{font-family:'Lato';font-size:11pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(255, 255, 255, 1.00);background-color:transparent;}.cl-3405df76{font-family:'Poppins';font-size:10pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-3405df77{font-family:'Poppins';font-size:10pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-34081c78{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1.3;background-color:transparent;}.cl-34081c82{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1.3;background-color:transparent;}.cl-34081c8c{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1.3;background-color:transparent;}.cl-34082dda{width:0.75in;background-color:rgba(2, 59, 44, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-34082de4{width:0.75in;background-color:rgba(2, 59, 44, 1.00);vertical-align: middle;border-bottom: 1pt solid rgba(255, 255, 255, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-34082de5{width:0.75in;background-color:rgba(2, 59, 44, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 1pt solid rgba(255, 255, 255, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-34082de6{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(62, 61, 61, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-34082dee{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(62, 61, 61, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-34082def{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(62, 61, 61, 1.00);border-top: 1pt solid rgba(62, 61, 61, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-34082df0{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(62, 61, 61, 1.00);border-top: 1pt solid rgba(62, 61, 61, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}Field or AveragepHECCECTotal CTOCInorganic Cmmhos/cmcmolc/kg%Field 016.70.427.81.81.8Field 037.60.6010.01.61.50.12Hay/Silage Average (14 Fields)6.10.4315.02.42.4Pasture, Seeded Average (16 Fields)6.20.3314.02.72.70.11County 9 Average (5 Fields)7.10.488.71.71.60.11Project Average (100 Fields)6.10.7415.02.92.90.19 # Example without `unit_hline()` make_ft(   table = tables$chemical,   header = headers$chemical ) |>   # Style the flextable   style_ft() .cl-34238f1c{}.cl-341db394{font-family:'Lato';font-size:11pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(255, 255, 255, 1.00);background-color:transparent;}.cl-341db3a8{font-family:'Poppins';font-size:10pt;font-weight:bold;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-341db3b2{font-family:'Poppins';font-size:10pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-342018e6{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1.3;background-color:transparent;}.cl-342018f0{margin:0;text-align:left;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1.3;background-color:transparent;}.cl-342018fa{margin:0;text-align:right;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 1.3;background-color:transparent;}.cl-34202c6e{width:0.75in;background-color:rgba(2, 59, 44, 1.00);vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-34202c6f{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(62, 61, 61, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-34202c78{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(62, 61, 61, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-34202c79{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(62, 61, 61, 1.00);border-top: 1pt solid rgba(62, 61, 61, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-34202c82{width:0.75in;background-color:transparent;vertical-align: middle;border-bottom: 1pt solid rgba(62, 61, 61, 1.00);border-top: 1pt solid rgba(62, 61, 61, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}Field or AveragepHECCECTotal CTOCInorganic Cmmhos/cmcmolc/kg%%%Field 016.70.427.81.81.8Field 037.60.6010.01.61.50.12Hay/Silage Average (14 Fields)6.10.4315.02.42.4Pasture, Seeded Average (16 Fields)6.20.3314.02.72.70.11County 9 Average (5 Fields)7.10.488.71.71.60.11Project Average (100 Fields)6.10.7415.02.92.90.19"},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/usda_texture.html","id":null,"dir":"Reference","previous_headings":"","what":"USDA texture data — usda_texture","title":"USDA texture data — usda_texture","text":"US Department Agriculture textural classes","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/usda_texture.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"USDA texture data — usda_texture","text":"","code":"usda_texture"},{"path":[]},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/usda_texture.html","id":"usda-texture-a-list-of-two-data-frames-polygons","dir":"Reference","previous_headings":"","what":"usda_texture A list of two data frames: polygons","title":"USDA texture data — usda_texture","text":"contains 53 rows 4 columns labels contains 12 rows 5 columns. clay Percentage clay content sand Percentage sand content silt Percentage silt content label Texture class, factor 12 levels angle Angle rotate label texture triangle","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/usda_texture.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"USDA texture data — usda_texture","text":"Adapted data(USDA, package = \"ggtern\").","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/washi_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Example WaSHI data — washi_data","title":"Example WaSHI data — washi_data","text":"subset Washington Soil Health Initiative (WaSHI) State Soils Assessment anonymized data. data set presents sample row, columns measurement.","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/washi_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example WaSHI data — washi_data","text":"","code":"washi_data"},{"path":[]},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/washi_data.html","id":"washi-data-a-data-frame-with-rows-and-columns-","dir":"Reference","previous_headings":"","what":"washi_data A data frame with 100 rows and 42 columns:","title":"Example WaSHI data — washi_data","text":"year Year sample sample_id, producer_id, field_id Anonymized IDs farm_name, field_name Anonymized names longitude, latitude Truncated coordinates texture Measured soil texture columns Column name includes measurement units; value measurement result","code":""},{"path":"https://wa-department-of-agriculture.github.io/soils/reference/washi_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example WaSHI data — washi_data","text":"WaSHI State Soils","code":""}]
